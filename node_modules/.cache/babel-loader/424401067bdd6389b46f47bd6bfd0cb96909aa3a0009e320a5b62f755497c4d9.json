{"ast":null,"code":"var _jsxFileName = \"/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/CreatePostPage.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import styles from '../styles/createpostpage.module.scss';\n// import { Post } from \"../interface/posts\";\n// import {useNavigate} from \"react-router-dom\";\n// import axios from \"axios\";\n//\n// declare global {\n//     interface Window {\n//         kakao: any;\n//     }\n// }\n//\n// interface CreatePostPageProps {\n//     setSelectedPlace: (place: { lat: number, lng: number } | null) => void;\n//     addPost: (post: Post) => void;\n//     login: boolean;\n//     setLogin: React.Dispatch<React.SetStateAction<boolean>>;\n// }\n//\n// function CreatePostPage({ setSelectedPlace, addPost, login, setLogin }: CreatePostPageProps) {\n//     if (login) {\n//         setLogin(true);\n//     }\n//     else {\n//         setLogin(false);\n//     }\n//\n//     const navigate = useNavigate();\n//     const baseUrl = 'http://3.37.252.66:8080';\n//     const [inputs, setInputs] = useState<Post>({\n//         id: 0,\n//         title: '',\n//         location: '',\n//         participants: '',\n//         date: '',\n//         time: '',\n//         views: 0,\n//         description: '',\n//         content: '',\n//         // imgSrc: '',\n//         imagedata: [''],\n//         lat: 0,\n//         lng: 0\n//     });\n//\n//     const onChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n//         const { value, name } = e.target;\n//\n//         // 숫자 필드에 대한 추가 처리\n//         if (name === 'id' || name === 'views') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseInt(value),\n//             });\n//         } else if (name === 'lat' || name === 'lng') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseFloat(value)\n//             });\n//         } else {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: value,\n//             });\n//         }\n//     };\n//\n//     const [places, setPlaces] = useState<any[]>([]);\n//     const [selectedPlace, setSelectedPlaceState] = useState<any>(null);\n//\n//     useEffect(() => {\n//         if (!inputs.location || !window.kakao || !window.kakao.maps) return;\n//\n//         const ps = new window.kakao.maps.services.Places();\n//         ps.keywordSearch(inputs.location, (data: any[], status: any) => {\n//             if (status === window.kakao.maps.services.Status.OK) {\n//                 setPlaces(data);\n//             }\n//         });\n//     }, [inputs.location]);\n//\n//     useEffect(() => {\n//         if (!selectedPlace || !window.kakao || !window.kakao.maps) return;\n//\n//         const container = document.getElementById('map');\n//         const options = {\n//             center: new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x),\n//             level: 3,\n//         };\n//         const map = new window.kakao.maps.Map(container, options);\n//         const markerPosition = new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x);\n//         const marker = new window.kakao.maps.Marker({\n//             position: markerPosition,\n//         });\n//         marker.setMap(map);\n//     }, [selectedPlace]);\n//\n//     const handleSelect = (place: any) => {\n//         setSelectedPlaceState(place);\n//         setSelectedPlace({ lat: place.y, lng: place.x });\n//         setInputs({\n//             ...inputs,\n//             location: place.address_name,\n//             lat: parseFloat(place.y),\n//             lng: parseFloat(place.x)\n//         });\n//         setPlaces([]);\n//     };\n//\n//     const handleSubmit = (e: React.FormEvent) => {\n//         e.preventDefault();\n//         // if (!selectedPlace) {\n//         //     alert('장소를 선택해주세요.');\n//         //     return;\n//         // }\n//         console.log(inputs)\n//         addPost(inputs);\n//\n//         axios.post(`${baseUrl}/index/articles/create`, inputs)\n//             .then((response) => {\n//                 if (response.status === 200) {\n//                     alert('Post successful!');\n//                     navigate('/community')\n//                     // setData(response.data);\n//                     // 여기서 원하는 동작을 추가할 수 있습니다. 예: 페이지 이동 등.\n//                 } else {\n//                     alert('Post failed. Please try again.');\n//                 }\n//             })\n//             .catch(error => {\n//                 if (error.response) {\n//                     alert(`Error: ${error.response.data}`);\n//                 } else {\n//                     alert('Error during Post');\n//                 }\n//             });\n//\n//\n//\n//         // axios.post(`http://3.37.252.66:8080/index/articles/create`, inputs)\n//         //     .then((response) => {\n//         //         if (response.status === 200) {\n//         //             alert('Post successful!');\n//         //             navigate('/community');\n//         //             // 필요한 다른 동작을 추가하세요.\n//         //         } else {\n//         //             alert('Post failed. Please try again.');\n//         //         }\n//         //     })\n//         //     .catch(error => {\n//         //         if (error.response) {\n//         //             // 서버가 응답을 주었으나 에러 코드가 있는 경우\n//         //             alert(`Error: ${error.response.status} - ${error.response.data}`);\n//         //         } else if (error.request) {\n//         //             // 요청이 이루어졌으나 응답을 받지 못한 경우\n//         //             alert(`No response received from server. ${error.response}`);\n//         //         } else {\n//         //             // 요청 설정 중에 오류가 발생한 경우\n//         //             alert(`Error: ${error.message}`);\n//         //         }\n//         //     });\n//\n//         // 폼 초기화\n//         setInputs({\n//             id: 0,\n//             title: '',\n//             location: '',\n//             participants: '',\n//             date: '',\n//             time: '',\n//             views: 0,\n//             description: '',\n//             content: '',\n//             // imgSrc: '',\n//             imagedata: [''],\n//             lat: 0,\n//             lng: 0\n//         });\n//         setSelectedPlace(null);\n//     };\n//\n//     // // 이미지 파일을 저장하기 위한 상태\n//     // const [selectedFile, setSelectedFile] = useState<File | null>(null);\n//     // const [imagePreviewUrl, setImagePreviewUrl] = useState<string | null>(null);\n//     //\n//     // // 이미지 파일 변경 처리\n//     // // 이미지 파일 변경 처리\n//     // const onFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     //     if (e.target.files && e.target.files[0]) {\n//     //         const file = e.target.files[0];\n//     //         setSelectedFile(file);\n//     //\n//     //         // 이미지 미리보기 URL 생성\n//     //         const previewUrl = URL.createObjectURL(file);\n//     //         setImagePreviewUrl(previewUrl);\n//     //         setInputs({\n//     //             ...inputs,\n//     //             imgSrc: imagePreviewUrl;\n//     //         })\n//     //     }\n//     // };\n//\n//\n//     return (\n//         <div className={styles.pageContainer}>\n//             <div className={styles.formContainer}>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"title\">제목</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"title\"\n//                             name=\"title\"\n//                             placeholder=\"제목\"\n//                             value={inputs.title}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"imagedata\">이미지 파일</label>\n//                         <input type=\"file\"\n//                                // id=\"imgSrc\"\n//                                // name=\"imgSrc\"\n//                                id=\"imagedata\"\n//                                name=\"imagedata\"\n//                                placeholder=\"이미지 파일을 선택해주세요.\"\n//                                // value={inputs.imgSrc}\n//                                value={inputs.imagedata}\n//                                // onChange={onChange}\n//                                 onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"date\">날짜</label>\n//                         <input\n//                             type=\"date\"\n//                             id=\"date\"\n//                             name=\"date\"\n//                             placeholder=\"날짜\"\n//                             value={inputs.date}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"time\">시간</label>\n//                         <input\n//                             type=\"time\"\n//                             id=\"time\"\n//                             name=\"time\"\n//                             placeholder=\"시간\"\n//                             value={inputs.time}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"location\">장소</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"location\"\n//                             name=\"location\"\n//                             placeholder=\"주소로 검색하세요.\"\n//                             value={inputs.location}\n//                             onChange={onChange}\n//                         />\n//                         {places.length > 0 && (\n//                             <div className={styles.autocompleteDropdownContainer}>\n//                                 {places.map((place) => (\n//                                     <div\n//                                         key={place.id}\n//                                         className={styles.suggestionItem}\n//                                         onClick={() => handleSelect(place)}>\n//                                         {place.place_name} ({place.address_name})\n//                                     </div>\n//                                 ))}\n//                             </div>\n//                         )}\n//                     </div>\n//                     <div id=\"map\" className={styles.map}></div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"participants\">인원 수</label>\n//                         <select\n//                             id=\"participants\"\n//                             name=\"participants\"\n//                             className={styles.select}\n//                             value={inputs.participants}\n//                             onChange={onChange}\n//                         >\n//                             <option value=\"\" disabled>인원 수</option>\n//                             <option value=\"1\">1명</option>\n//                             <option value=\"2\">2명</option>\n//                             <option value=\"3\">3명</option>\n//                             <option value=\"4\">4명</option>\n//                             <option value=\"5\">5명</option>\n//                             <option value=\"6\">6명</option>\n//                             <option value=\"7\">7명</option>\n//                             <option value=\"8\">8명</option>\n//                             <option value=\"9\">9명</option>\n//                             <option value=\"10\">10명 이상</option>\n//                         </select>\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"description\">자세한 설명</label>\n//                         <textarea\n//                             id=\"description\"\n//                             name=\"description\"\n//                             placeholder=\"자세한 설명을 입력해주세요.\"\n//                             value={inputs.description}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.buttonGroup}>\n//                         <button type=\"submit\" className={styles.submitButton}>작성완료 ➔</button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default CreatePostPage;\n//\n//\n//\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/createpostpage.module.scss';\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatePostPage({\n  setSelectedPlace,\n  addPost,\n  login,\n  setLogin\n}) {\n  _s();\n  const navigate = useNavigate();\n  const baseUrl = 'http://3.37.252.66:8080';\n  const [inputs, setInputs] = useState({\n    id: 0,\n    title: '',\n    location: '',\n    participants: '',\n    date: '',\n    time: '',\n    views: 0,\n    description: '',\n    content: '',\n    lat: 0,\n    lng: 0\n  });\n  const [selectedFile, setSelectedFile] = useState(null);\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setInputs(inputs => ({\n      ...inputs,\n      [name]: name === 'id' || name === 'views' ? parseInt(value) : value\n    }));\n  };\n  const onFileChange = e => {\n    if (e.target.files && e.target.files[0]) {\n      setSelectedFile(e.target.files[0]);\n    }\n  };\n  const [places, setPlaces] = useState([]);\n  useEffect(() => {\n    if (!inputs.location || !window.kakao || !window.kakao.maps) return;\n    const ps = new window.kakao.maps.services.Places();\n    ps.keywordSearch(inputs.location, (data, status) => {\n      if (status === window.kakao.maps.services.Status.OK) {\n        setPlaces(data);\n      }\n    });\n  }, [inputs.location]);\n  useEffect(() => {\n    if (!selectedFile || !window.kakao || !window.kakao.maps) return;\n    const container = document.getElementById('map');\n    const options = {\n      center: new window.kakao.maps.LatLng(inputs.lat, inputs.lng),\n      level: 3\n    };\n    new window.kakao.maps.Map(container, options);\n  }, [selectedFile, inputs.lat, inputs.lng]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!selectedFile) {\n      alert('Please select an image to upload.');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('image', selectedFile);\n    Object.keys(inputs).forEach(key => formData.append(key, inputs[key]));\n    try {\n      const response = await axios.post(`${baseUrl}/index/articles/create`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      if (response.status === 200) {\n        alert('Post successful!');\n        navigate('/community');\n        addPost(inputs);\n      } else {\n        alert('Post failed. Please try again.');\n      }\n    } catch (error) {\n      if (axios.isAxiosError(error) && error.response) {\n        alert(`Error: ${error.response.data}`);\n      } else {\n        alert('An unexpected error occurred.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pageContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            placeholder: \"\\uC81C\\uBAA9\",\n            value: inputs.title,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"image\",\n            children: \"\\uC774\\uBBF8\\uC9C0 \\uD30C\\uC77C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            id: \"image\",\n            name: \"image\",\n            onChange: onFileChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"\\uB0A0\\uC9DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            name: \"date\",\n            value: inputs.date,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"time\",\n            children: \"\\uC2DC\\uAC04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"time\",\n            name: \"time\",\n            value: inputs.time,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"location\",\n            children: \"\\uC7A5\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"location\",\n            name: \"location\",\n            placeholder: \"\\uC8FC\\uC18C\\uB85C \\uAC80\\uC0C9\\uD558\\uC138\\uC694.\",\n            value: inputs.location,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 451,\n            columnNumber: 25\n          }, this), places.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.autocompleteDropdownContainer,\n            children: places.map(place => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.suggestionItem,\n              onClick: () => handleSelect(place),\n              children: [place.place_name, \" (\", place.address_name, \")\"]\n            }, place.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 449,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          className: styles.map\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"participants\",\n            children: \"\\uC778\\uC6D0 \\uC218\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"participants\",\n            name: \"participants\",\n            className: styles.select,\n            value: inputs.participants,\n            onChange: onChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"\\uC778\\uC6D0 \\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"1\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"2\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"3\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4\",\n              children: \"4\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5\",\n              children: \"5\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"6\",\n              children: \"6\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 472,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"7\",\n              children: \"7\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"8\",\n              children: \"8\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"9\",\n              children: \"9\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 475,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"10\\uBA85 \\uC774\\uC0C1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"\\uC790\\uC138\\uD55C \\uC124\\uBA85\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            placeholder: \"\\uC790\\uC138\\uD55C \\uC124\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            value: inputs.description,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonGroup,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: styles.submitButton,\n            children: \"\\uC791\\uC131\\uC644\\uB8CC \\u2794\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 430,\n    columnNumber: 9\n  }, this);\n}\n_s(CreatePostPage, \"+3oBDjRL1WI+XI44uoPCXJPNKEU=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePostPage;\nexport default CreatePostPage;\nvar _c;\n$RefreshReg$(_c, \"CreatePostPage\");","map":{"version":3,"names":["React","useState","useEffect","styles","useNavigate","axios","jsxDEV","_jsxDEV","CreatePostPage","setSelectedPlace","addPost","login","setLogin","_s","navigate","baseUrl","inputs","setInputs","id","title","location","participants","date","time","views","description","content","lat","lng","selectedFile","setSelectedFile","onChange","e","value","name","target","parseInt","onFileChange","files","places","setPlaces","window","kakao","maps","ps","services","Places","keywordSearch","data","status","Status","OK","container","document","getElementById","options","center","LatLng","level","Map","handleSubmit","preventDefault","alert","formData","FormData","append","Object","keys","forEach","key","response","post","headers","error","isAxiosError","className","pageContainer","children","formContainer","onSubmit","formGroup","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","length","autocompleteDropdownContainer","map","place","suggestionItem","onClick","handleSelect","place_name","address_name","select","disabled","buttonGroup","submitButton","_c","$RefreshReg$"],"sources":["/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/CreatePostPage.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import styles from '../styles/createpostpage.module.scss';\n// import { Post } from \"../interface/posts\";\n// import {useNavigate} from \"react-router-dom\";\n// import axios from \"axios\";\n//\n// declare global {\n//     interface Window {\n//         kakao: any;\n//     }\n// }\n//\n// interface CreatePostPageProps {\n//     setSelectedPlace: (place: { lat: number, lng: number } | null) => void;\n//     addPost: (post: Post) => void;\n//     login: boolean;\n//     setLogin: React.Dispatch<React.SetStateAction<boolean>>;\n// }\n//\n// function CreatePostPage({ setSelectedPlace, addPost, login, setLogin }: CreatePostPageProps) {\n//     if (login) {\n//         setLogin(true);\n//     }\n//     else {\n//         setLogin(false);\n//     }\n//\n//     const navigate = useNavigate();\n//     const baseUrl = 'http://3.37.252.66:8080';\n//     const [inputs, setInputs] = useState<Post>({\n//         id: 0,\n//         title: '',\n//         location: '',\n//         participants: '',\n//         date: '',\n//         time: '',\n//         views: 0,\n//         description: '',\n//         content: '',\n//         // imgSrc: '',\n//         imagedata: [''],\n//         lat: 0,\n//         lng: 0\n//     });\n//\n//     const onChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n//         const { value, name } = e.target;\n//\n//         // 숫자 필드에 대한 추가 처리\n//         if (name === 'id' || name === 'views') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseInt(value),\n//             });\n//         } else if (name === 'lat' || name === 'lng') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseFloat(value)\n//             });\n//         } else {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: value,\n//             });\n//         }\n//     };\n//\n//     const [places, setPlaces] = useState<any[]>([]);\n//     const [selectedPlace, setSelectedPlaceState] = useState<any>(null);\n//\n//     useEffect(() => {\n//         if (!inputs.location || !window.kakao || !window.kakao.maps) return;\n//\n//         const ps = new window.kakao.maps.services.Places();\n//         ps.keywordSearch(inputs.location, (data: any[], status: any) => {\n//             if (status === window.kakao.maps.services.Status.OK) {\n//                 setPlaces(data);\n//             }\n//         });\n//     }, [inputs.location]);\n//\n//     useEffect(() => {\n//         if (!selectedPlace || !window.kakao || !window.kakao.maps) return;\n//\n//         const container = document.getElementById('map');\n//         const options = {\n//             center: new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x),\n//             level: 3,\n//         };\n//         const map = new window.kakao.maps.Map(container, options);\n//         const markerPosition = new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x);\n//         const marker = new window.kakao.maps.Marker({\n//             position: markerPosition,\n//         });\n//         marker.setMap(map);\n//     }, [selectedPlace]);\n//\n//     const handleSelect = (place: any) => {\n//         setSelectedPlaceState(place);\n//         setSelectedPlace({ lat: place.y, lng: place.x });\n//         setInputs({\n//             ...inputs,\n//             location: place.address_name,\n//             lat: parseFloat(place.y),\n//             lng: parseFloat(place.x)\n//         });\n//         setPlaces([]);\n//     };\n//\n//     const handleSubmit = (e: React.FormEvent) => {\n//         e.preventDefault();\n//         // if (!selectedPlace) {\n//         //     alert('장소를 선택해주세요.');\n//         //     return;\n//         // }\n//         console.log(inputs)\n//         addPost(inputs);\n//\n//         axios.post(`${baseUrl}/index/articles/create`, inputs)\n//             .then((response) => {\n//                 if (response.status === 200) {\n//                     alert('Post successful!');\n//                     navigate('/community')\n//                     // setData(response.data);\n//                     // 여기서 원하는 동작을 추가할 수 있습니다. 예: 페이지 이동 등.\n//                 } else {\n//                     alert('Post failed. Please try again.');\n//                 }\n//             })\n//             .catch(error => {\n//                 if (error.response) {\n//                     alert(`Error: ${error.response.data}`);\n//                 } else {\n//                     alert('Error during Post');\n//                 }\n//             });\n//\n//\n//\n//         // axios.post(`http://3.37.252.66:8080/index/articles/create`, inputs)\n//         //     .then((response) => {\n//         //         if (response.status === 200) {\n//         //             alert('Post successful!');\n//         //             navigate('/community');\n//         //             // 필요한 다른 동작을 추가하세요.\n//         //         } else {\n//         //             alert('Post failed. Please try again.');\n//         //         }\n//         //     })\n//         //     .catch(error => {\n//         //         if (error.response) {\n//         //             // 서버가 응답을 주었으나 에러 코드가 있는 경우\n//         //             alert(`Error: ${error.response.status} - ${error.response.data}`);\n//         //         } else if (error.request) {\n//         //             // 요청이 이루어졌으나 응답을 받지 못한 경우\n//         //             alert(`No response received from server. ${error.response}`);\n//         //         } else {\n//         //             // 요청 설정 중에 오류가 발생한 경우\n//         //             alert(`Error: ${error.message}`);\n//         //         }\n//         //     });\n//\n//         // 폼 초기화\n//         setInputs({\n//             id: 0,\n//             title: '',\n//             location: '',\n//             participants: '',\n//             date: '',\n//             time: '',\n//             views: 0,\n//             description: '',\n//             content: '',\n//             // imgSrc: '',\n//             imagedata: [''],\n//             lat: 0,\n//             lng: 0\n//         });\n//         setSelectedPlace(null);\n//     };\n//\n//     // // 이미지 파일을 저장하기 위한 상태\n//     // const [selectedFile, setSelectedFile] = useState<File | null>(null);\n//     // const [imagePreviewUrl, setImagePreviewUrl] = useState<string | null>(null);\n//     //\n//     // // 이미지 파일 변경 처리\n//     // // 이미지 파일 변경 처리\n//     // const onFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     //     if (e.target.files && e.target.files[0]) {\n//     //         const file = e.target.files[0];\n//     //         setSelectedFile(file);\n//     //\n//     //         // 이미지 미리보기 URL 생성\n//     //         const previewUrl = URL.createObjectURL(file);\n//     //         setImagePreviewUrl(previewUrl);\n//     //         setInputs({\n//     //             ...inputs,\n//     //             imgSrc: imagePreviewUrl;\n//     //         })\n//     //     }\n//     // };\n//\n//\n//     return (\n//         <div className={styles.pageContainer}>\n//             <div className={styles.formContainer}>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"title\">제목</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"title\"\n//                             name=\"title\"\n//                             placeholder=\"제목\"\n//                             value={inputs.title}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"imagedata\">이미지 파일</label>\n//                         <input type=\"file\"\n//                                // id=\"imgSrc\"\n//                                // name=\"imgSrc\"\n//                                id=\"imagedata\"\n//                                name=\"imagedata\"\n//                                placeholder=\"이미지 파일을 선택해주세요.\"\n//                                // value={inputs.imgSrc}\n//                                value={inputs.imagedata}\n//                                // onChange={onChange}\n//                                 onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"date\">날짜</label>\n//                         <input\n//                             type=\"date\"\n//                             id=\"date\"\n//                             name=\"date\"\n//                             placeholder=\"날짜\"\n//                             value={inputs.date}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"time\">시간</label>\n//                         <input\n//                             type=\"time\"\n//                             id=\"time\"\n//                             name=\"time\"\n//                             placeholder=\"시간\"\n//                             value={inputs.time}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"location\">장소</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"location\"\n//                             name=\"location\"\n//                             placeholder=\"주소로 검색하세요.\"\n//                             value={inputs.location}\n//                             onChange={onChange}\n//                         />\n//                         {places.length > 0 && (\n//                             <div className={styles.autocompleteDropdownContainer}>\n//                                 {places.map((place) => (\n//                                     <div\n//                                         key={place.id}\n//                                         className={styles.suggestionItem}\n//                                         onClick={() => handleSelect(place)}>\n//                                         {place.place_name} ({place.address_name})\n//                                     </div>\n//                                 ))}\n//                             </div>\n//                         )}\n//                     </div>\n//                     <div id=\"map\" className={styles.map}></div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"participants\">인원 수</label>\n//                         <select\n//                             id=\"participants\"\n//                             name=\"participants\"\n//                             className={styles.select}\n//                             value={inputs.participants}\n//                             onChange={onChange}\n//                         >\n//                             <option value=\"\" disabled>인원 수</option>\n//                             <option value=\"1\">1명</option>\n//                             <option value=\"2\">2명</option>\n//                             <option value=\"3\">3명</option>\n//                             <option value=\"4\">4명</option>\n//                             <option value=\"5\">5명</option>\n//                             <option value=\"6\">6명</option>\n//                             <option value=\"7\">7명</option>\n//                             <option value=\"8\">8명</option>\n//                             <option value=\"9\">9명</option>\n//                             <option value=\"10\">10명 이상</option>\n//                         </select>\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"description\">자세한 설명</label>\n//                         <textarea\n//                             id=\"description\"\n//                             name=\"description\"\n//                             placeholder=\"자세한 설명을 입력해주세요.\"\n//                             value={inputs.description}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.buttonGroup}>\n//                         <button type=\"submit\" className={styles.submitButton}>작성완료 ➔</button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default CreatePostPage;\n//\n//\n//\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/createpostpage.module.scss';\nimport { Post } from \"../interface/posts\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\ndeclare global {\n    interface Window {\n        kakao: any;\n    }\n}\n\ninterface CreatePostPageProps {\n    setSelectedPlace: (place: { lat: number, lng: number } | null) => void;\n    addPost: (post: Post) => void;\n    login: boolean;\n    setLogin: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction CreatePostPage({ setSelectedPlace, addPost, login, setLogin }: CreatePostPageProps) {\n    const navigate = useNavigate();\n    const baseUrl = 'http://3.37.252.66:8080';\n\n    const [inputs, setInputs] = useState<Post>({\n        id: 0,\n        title: '',\n        location: '',\n        participants: '',\n        date: '',\n        time: '',\n        views: 0,\n        description: '',\n        content: '',\n        lat: 0,\n        lng: 0\n    });\n\n    const [selectedFile, setSelectedFile] = useState<File | null>(null);\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n        const { value, name } = e.target;\n        setInputs(inputs => ({ ...inputs, [name]: name === 'id' || name === 'views' ? parseInt(value) : value }));\n    };\n\n    const onFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (e.target.files && e.target.files[0]) {\n            setSelectedFile(e.target.files[0]);\n        }\n    };\n\n    const [places, setPlaces] = useState<any[]>([]);\n\n    useEffect(() => {\n        if (!inputs.location || !window.kakao || !window.kakao.maps) return;\n\n        const ps = new window.kakao.maps.services.Places();\n        ps.keywordSearch(inputs.location, (data: any[], status: any) => {\n            if (status === window.kakao.maps.services.Status.OK) {\n                setPlaces(data);\n            }\n        });\n    }, [inputs.location]);\n\n    useEffect(() => {\n        if (!selectedFile || !window.kakao || !window.kakao.maps) return;\n\n        const container = document.getElementById('map');\n        const options = {\n            center: new window.kakao.maps.LatLng(inputs.lat, inputs.lng),\n            level: 3,\n        };\n        new window.kakao.maps.Map(container, options);\n    }, [selectedFile, inputs.lat, inputs.lng]);\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!selectedFile) {\n            alert('Please select an image to upload.');\n            return;\n        }\n\n        const formData = new FormData();\n        formData.append('image', selectedFile);\n        Object.keys(inputs).forEach(key => formData.append(key, inputs[key as keyof Post]));\n\n        try {\n            const response = await axios.post(`${baseUrl}/index/articles/create`, formData, {\n                headers: { 'Content-Type': 'multipart/form-data' }\n            });\n            if (response.status === 200) {\n                alert('Post successful!');\n                navigate('/community');\n                addPost(inputs);\n            } else {\n                alert('Post failed. Please try again.');\n            }\n        } catch (error) {\n            if (axios.isAxiosError(error) && error.response) {\n                alert(`Error: ${error.response.data}`);\n            } else {\n                alert('An unexpected error occurred.');\n            }\n        }\n    };\n\n    return (\n        <div className={styles.pageContainer}>\n            <div className={styles.formContainer}>\n                <form onSubmit={handleSubmit}>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"title\">제목</label>\n                        <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"제목\" value={inputs.title} onChange={onChange} />\n                    </div>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"image\">이미지 파일</label>\n                        <input type=\"file\" id=\"image\" name=\"image\" onChange={onFileChange} />\n                    </div>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"date\">날짜</label>\n                        <input type=\"date\" id=\"date\" name=\"date\" value={inputs.date} onChange={onChange} />\n                    </div>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"time\">시간</label>\n                        <input type=\"time\" id=\"time\" name=\"time\" value={inputs.time} onChange={onChange} />\n                    </div>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"location\">장소</label>\n                        <input type=\"text\" id=\"location\" name=\"location\" placeholder=\"주소로 검색하세요.\" value={inputs.location} onChange={onChange} />\n                        {places.length > 0 && (\n                            <div className={styles.autocompleteDropdownContainer}>\n                                {places.map(place => (\n                                    <div key={place.id} className={styles.suggestionItem} onClick={() => handleSelect(place)}>\n                                        {place.place_name} ({place.address_name})\n                                    </div>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n                    <div id=\"map\" className={styles.map}></div>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"participants\">인원 수</label>\n                        <select id=\"participants\" name=\"participants\" className={styles.select} value={inputs.participants} onChange={onChange}>\n                            <option value=\"\" disabled>인원 수</option>\n                            <option value=\"1\">1명</option>\n                            <option value=\"2\">2명</option>\n                            <option value=\"3\">3명</option>\n                            <option value=\"4\">4명</option>\n                            <option value=\"5\">5명</option>\n                            <option value=\"6\">6명</option>\n                            <option value=\"7\">7명</option>\n                            <option value=\"8\">8명</option>\n                            <option value=\"9\">9명</option>\n                            <option value=\"10\">10명 이상</option>\n                        </select>\n                    </div>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"description\">자세한 설명</label>\n                        <textarea id=\"description\" name=\"description\" placeholder=\"자세한 설명을 입력해주세요.\" value={inputs.description} onChange={onChange} />\n                    </div>\n                    <div className={styles.buttonGroup}>\n                        <button type=\"submit\" className={styles.submitButton}>작성완료 ➔</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default CreatePostPage;\n\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}