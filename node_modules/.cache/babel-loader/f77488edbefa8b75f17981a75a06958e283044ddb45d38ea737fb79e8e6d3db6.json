{"ast":null,"code":"var _jsxFileName = \"/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/PostDetailPage.tsx\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { useParams } from 'react-router-dom';\n// import { ppost } from '../util/communitydata';\n// import styles from '../styles/postdetailpage.module.scss';\n// import {Post} from \"../interface/posts\";\n//\n// interface detailpostprops {\n//     login: boolean; setLogin: React.Dispatch<React.SetStateAction<boolean>>;\n//     posts: Post[];\n// }\n//\n// function PostDetailPage({ posts, login, setLogin }: detailpostprops) {\n//     if (login) {\n//         setLogin(true);\n//     }\n//     else {\n//         setLogin(false);\n//     }\n//     const { id } = useParams<{ id: string }>();\n//     const post = posts.find(p => p.id === parseInt(id || '0'));\n//\n//     if (!post) {\n//         return <div>게시글을 찾을 수 없습니다.</div>;\n//     }\n//\n//     return (\n//         <div className={styles.pageContainer}>\n//             <h1 className={styles.title}>{post.title}</h1>\n//             <div className={styles.info}>\n//                 <span className={styles.date}>{post.date}</span>\n//                 <span className={styles.views}>{post.views} views</span>\n//             </div>\n//             <div className={styles.imageContainer}>\n//                 {/*<img src={post.imgSrc} alt={post.title} className={styles.image} />*/}\n//                 <img src={post.imageFile} alt={post.title} className={styles.image}/>\n//             </div>\n//             <p className={styles.content}>{post.content}</p>\n//         </div>\n//     );\n// }\n//\n// export default PostDetailPage;\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from '../styles/postdetailpage.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostDetailPage({\n  posts,\n  login,\n  setLogin\n}) {\n  _s();\n  if (login) {\n    setLogin(true);\n  } else {\n    setLogin(false);\n  }\n  const {\n    id\n  } = useParams();\n  const post = posts.find(p => p.id === parseInt(id || '0'));\n  const [imageURL, setImageURL] = useState(null);\n\n  // useEffect(() => {\n  //     if (post) {\n  //         if (typeof post.imagePath === 'string') {\n  //             setImageURL(post.imagePath); // URL인 경우\n  //         } else if (post.imagePath instanceof File) {\n  //             const url = URL.createObjectURL(post.imagePath);\n  //             setImageURL(url); // File인 경우 URL 생성\n  //\n  //             // 컴포넌트가 언마운트될 때 Object URL을 해제하여 메모리 누수를 방지합니다.\n  //             return () => {\n  //                 URL.revokeObjectURL(url);\n  //             };\n  //         }\n  //     }\n  // }, [post]);\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uAC8C\\uC2DC\\uAE00\\uC744 \\uCC3E\\uC744 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this);\n  }\n  console.log(post.imagePath);\n  console.log(post);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pageContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: post.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.info,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.date,\n        children: post.time\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.views,\n        children: [post.views, \" views\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.imageContainer,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: post.downloadUrl,\n        alt: post.title,\n        className: styles.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: styles.content,\n      children: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 9\n  }, this);\n}\n_s(PostDetailPage, \"nkg/J95cRbIm/ivCn31AV8cQLlk=\", false, function () {\n  return [useParams];\n});\n_c = PostDetailPage;\nexport default PostDetailPage;\nvar _c;\n$RefreshReg$(_c, \"PostDetailPage\");","map":{"version":3,"names":["React","useState","useParams","styles","jsxDEV","_jsxDEV","PostDetailPage","posts","login","setLogin","_s","id","post","find","p","parseInt","imageURL","setImageURL","children","fileName","_jsxFileName","lineNumber","columnNumber","console","log","imagePath","className","pageContainer","title","info","date","time","views","imageContainer","src","downloadUrl","alt","image","content","_c","$RefreshReg$"],"sources":["/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/PostDetailPage.tsx"],"sourcesContent":["// import React from 'react';\n// import { useParams } from 'react-router-dom';\n// import { ppost } from '../util/communitydata';\n// import styles from '../styles/postdetailpage.module.scss';\n// import {Post} from \"../interface/posts\";\n//\n// interface detailpostprops {\n//     login: boolean; setLogin: React.Dispatch<React.SetStateAction<boolean>>;\n//     posts: Post[];\n// }\n//\n// function PostDetailPage({ posts, login, setLogin }: detailpostprops) {\n//     if (login) {\n//         setLogin(true);\n//     }\n//     else {\n//         setLogin(false);\n//     }\n//     const { id } = useParams<{ id: string }>();\n//     const post = posts.find(p => p.id === parseInt(id || '0'));\n//\n//     if (!post) {\n//         return <div>게시글을 찾을 수 없습니다.</div>;\n//     }\n//\n//     return (\n//         <div className={styles.pageContainer}>\n//             <h1 className={styles.title}>{post.title}</h1>\n//             <div className={styles.info}>\n//                 <span className={styles.date}>{post.date}</span>\n//                 <span className={styles.views}>{post.views} views</span>\n//             </div>\n//             <div className={styles.imageContainer}>\n//                 {/*<img src={post.imgSrc} alt={post.title} className={styles.image} />*/}\n//                 <img src={post.imageFile} alt={post.title} className={styles.image}/>\n//             </div>\n//             <p className={styles.content}>{post.content}</p>\n//         </div>\n//     );\n// }\n//\n// export default PostDetailPage;\n\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport styles from '../styles/postdetailpage.module.scss';\nimport {getPost, Post} from '../interface/posts';\n\ninterface DetailPostProps {\n    login: boolean;\n    setLogin: React.Dispatch<React.SetStateAction<boolean>>;\n    posts: getPost[];\n}\n\nfunction PostDetailPage({ posts, login, setLogin }: DetailPostProps) {\n    if (login) {\n        setLogin(true);\n    } else {\n        setLogin(false);\n    }\n\n    const { id } = useParams<{ id: string }>();\n    const post = posts.find((p) => p.id === parseInt(id || '0'));\n\n    const [imageURL, setImageURL] = useState<string | null>(null);\n\n    // useEffect(() => {\n    //     if (post) {\n    //         if (typeof post.imagePath === 'string') {\n    //             setImageURL(post.imagePath); // URL인 경우\n    //         } else if (post.imagePath instanceof File) {\n    //             const url = URL.createObjectURL(post.imagePath);\n    //             setImageURL(url); // File인 경우 URL 생성\n    //\n    //             // 컴포넌트가 언마운트될 때 Object URL을 해제하여 메모리 누수를 방지합니다.\n    //             return () => {\n    //                 URL.revokeObjectURL(url);\n    //             };\n    //         }\n    //     }\n    // }, [post]);\n\n    if (!post) {\n        return <div>게시글을 찾을 수 없습니다.</div>;\n    }\n    console.log(post.imagePath)\n    console.log(post)\n\n    return (\n        <div className={styles.pageContainer}>\n            <h1 className={styles.title}>{post.title}</h1>\n            <div className={styles.info}>\n                <span className={styles.date}>{post.time}</span>\n                <span className={styles.views}>{post.views} views</span>\n            </div>\n            <div className={styles.imageContainer}>\n                <img src={post.downloadUrl} alt={post.title} className={styles.image} />\n            </div>\n            <p className={styles.content}>{post.content}</p>\n        </div>\n    );\n}\n\nexport default PostDetailPage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,MAAM,MAAM,sCAAsC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1D,SAASC,cAAcA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAA0B,CAAC,EAAE;EAAAC,EAAA;EACjE,IAAIF,KAAK,EAAE;IACPC,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC,MAAM;IACHA,QAAQ,CAAC,KAAK,CAAC;EACnB;EAEA,MAAM;IAAEE;EAAG,CAAC,GAAGT,SAAS,CAAiB,CAAC;EAC1C,MAAMU,IAAI,GAAGL,KAAK,CAACM,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,EAAE,KAAKI,QAAQ,CAACJ,EAAE,IAAI,GAAG,CAAC,CAAC;EAE5D,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAgB,IAAI,CAAC;;EAE7D;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAI,CAACW,IAAI,EAAE;IACP,oBAAOP,OAAA;MAAAa,QAAA,EAAK;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrC;EACAC,OAAO,CAACC,GAAG,CAACZ,IAAI,CAACa,SAAS,CAAC;EAC3BF,OAAO,CAACC,GAAG,CAACZ,IAAI,CAAC;EAEjB,oBACIP,OAAA;IAAKqB,SAAS,EAAEvB,MAAM,CAACwB,aAAc;IAAAT,QAAA,gBACjCb,OAAA;MAAIqB,SAAS,EAAEvB,MAAM,CAACyB,KAAM;MAAAV,QAAA,EAAEN,IAAI,CAACgB;IAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC9CjB,OAAA;MAAKqB,SAAS,EAAEvB,MAAM,CAAC0B,IAAK;MAAAX,QAAA,gBACxBb,OAAA;QAAMqB,SAAS,EAAEvB,MAAM,CAAC2B,IAAK;QAAAZ,QAAA,EAAEN,IAAI,CAACmB;MAAI;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChDjB,OAAA;QAAMqB,SAAS,EAAEvB,MAAM,CAAC6B,KAAM;QAAAd,QAAA,GAAEN,IAAI,CAACoB,KAAK,EAAC,QAAM;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eACNjB,OAAA;MAAKqB,SAAS,EAAEvB,MAAM,CAAC8B,cAAe;MAAAf,QAAA,eAClCb,OAAA;QAAK6B,GAAG,EAAEtB,IAAI,CAACuB,WAAY;QAACC,GAAG,EAAExB,IAAI,CAACgB,KAAM;QAACF,SAAS,EAAEvB,MAAM,CAACkC;MAAM;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvE,CAAC,eACNjB,OAAA;MAAGqB,SAAS,EAAEvB,MAAM,CAACmC,OAAQ;MAAApB,QAAA,EAAEN,IAAI,CAAC0B;IAAO;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd;AAACZ,EAAA,CA/CQJ,cAAc;EAAA,QAOJJ,SAAS;AAAA;AAAAqC,EAAA,GAPnBjC,cAAc;AAiDvB,eAAeA,cAAc;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}