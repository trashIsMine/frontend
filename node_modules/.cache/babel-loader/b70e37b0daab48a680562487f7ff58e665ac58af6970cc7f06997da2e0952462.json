{"ast":null,"code":"var _jsxFileName = \"/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/CreatePostPage.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import styles from '../styles/createpostpage.module.scss';\n// import { Post } from \"../interface/posts\";\n//\n// declare global {\n//     interface Window {\n//         kakao: any;\n//     }\n// }\n//\n// // interface CreatePostPageProps {\n// //     setSelectedPlace: (place: { lat: number, lng: number } | null) => void;\n// //     addPost: (post: Post) => void;\n// // }\n//\n// // interface Post {\n// //     title: string;\n// //     date: string;\n// //     time: string;\n// //     address: string;\n// //     people: string;\n// //     description: string;\n// //     place: { lat: number, lng: number };\n// // }\n//\n// function CreatePostPage({ setSelectedPlace, addPost }: CreatePostPageProps) {\n//     const [inputs, setInputs] = useState<Post>({\n//         id: 0,\n//         title: '',\n//         location: '',\n//         participants: '',\n//         date: '',\n//         time: '',\n//         views: 0,\n//         description: '',\n//         content: '',\n//         place: {\n//             lat: 0,\n//             lng: 0\n//         }\n//     })\n//\n//     const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//         const { value, name } = e.target;\n//\n//         // 숫자 필드에 대한 추가 처리\n//         if (name === 'id' || name === 'views') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseInt(value),\n//             });\n//         } else if (name === 'lat' || name === 'lng') {\n//             setInputs({\n//                 ...inputs,\n//                 place: {\n//                     ...inputs.place,\n//                     [name]: parseFloat(value),\n//                 },\n//             });\n//         } else {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: value,\n//             });\n//         }\n//     };\n//\n//\n//     const [address, setAddress] = useState<string>('');\n//     const [places, setPlaces] = useState<any[]>([]);\n//     const [selectedPlace, setSelectedPlaceState] = useState<any>(null);\n//     const [title, setTitle] = useState<string>('');\n//     const [date, setDate] = useState<string>('');\n//     const [time, setTime] = useState<string>('');\n//     const [people, setPeople] = useState<string>('');\n//     const [description, setDescription] = useState<string>('');\n//\n//     useEffect(() => {\n//         if (!address || !window.kakao || !window.kakao.maps) return;\n//\n//         const ps = new window.kakao.maps.services.Places();\n//         ps.keywordSearch(address, (data: any[], status: any) => {\n//             if (status === window.kakao.maps.services.Status.OK) {\n//                 setPlaces(data);\n//             }\n//         });\n//     }, [address]);\n//\n//     useEffect(() => {\n//         if (!selectedPlace || !window.kakao || !window.kakao.maps) return;\n//\n//         const container = document.getElementById('map');\n//         const options = {\n//             center: new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x),\n//             level: 3,\n//         };\n//         const map = new window.kakao.maps.Map(container, options);\n//         const markerPosition = new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x);\n//         const marker = new window.kakao.maps.Marker({\n//             position: markerPosition,\n//         });\n//         marker.setMap(map);\n//     }, [selectedPlace]);\n//\n//     const handleSelect = (place: any) => {\n//         setSelectedPlaceState(place);\n//         setSelectedPlace({ lat: place.y, lng: place.x });\n//         setAddress(place.address_name);\n//         setPlaces([]);\n//     };\n//\n//     const handleSubmit = (e: React.FormEvent) => {\n//         e.preventDefault();\n//         if (!selectedPlace) {\n//             alert('장소를 선택해주세요.');\n//             return;\n//         }\n//\n//         const newPost: Post = {\n//             title,\n//             date,\n//             time,\n//             address,\n//             people,\n//             description,\n//             place: selectedPlace,\n//         };\n//\n//         addPost(newPost);\n//\n//         // 폼 초기화\n//         setTitle('');\n//         setDate('');\n//         setTime('');\n//         setAddress('');\n//         setPeople('');\n//         setDescription('');\n//         setSelectedPlace(null);\n//     };\n//\n//     return (\n//         <div className={styles.pageContainer}>\n//             <div className={styles.formContainer}>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"title\">제목</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"title\"\n//                             placeholder=\"제목\"\n//                             value={title}\n//                             onChange={(e) => setTitle(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"date\">날짜</label>\n//                         <input\n//                             type=\"date\"\n//                             id=\"date\"\n//                             placeholder=\"날짜\"\n//                             value={date}\n//                             onChange={(e) => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"time\">시간</label>\n//                         <input\n//                             type=\"time\"\n//                             id=\"time\"\n//                             placeholder=\"시간\"\n//                             value={time}\n//                             onChange={(e) => setTime(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"location\">장소</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"location\"\n//                             placeholder=\"주소로 검색하세요.\"\n//                             value={address}\n//                             onChange={(e: React.ChangeEvent<HTMLInputElement>) => setAddress(e.target.value)}\n//                         />\n//                         {places.length > 0 && (\n//                             <div className={styles.autocompleteDropdownContainer}>\n//                                 {places.map((place) => (\n//                                     <div\n//                                         key={place.id}\n//                                         className={styles.suggestionItem}\n//                                         onClick={() => handleSelect(place)}>\n//                                         {place.place_name} ({place.address_name})\n//                                     </div>\n//                                 ))}\n//                             </div>\n//                         )}\n//                     </div>\n//                     <div id=\"map\" className={styles.map}></div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"people\">인원 수</label>\n//                         <select\n//                             id=\"people\"\n//                             className={styles.select}\n//                             value={people}\n//                             onChange={(e) => setPeople(e.target.value)}\n//                         >\n//                             <option value=\"\" disabled>인원 수</option>\n//                             <option value=\"1\">1명</option>\n//                             <option value=\"2\">2명</option>\n//                             <option value=\"3\">3명</option>\n//                             <option value=\"4\">4명</option>\n//                             <option value=\"5\">5명</option>\n//                             <option value=\"6\">6명</option>\n//                             <option value=\"7\">7명</option>\n//                             <option value=\"8\">8명</option>\n//                             <option value=\"9\">9명</option>\n//                             <option value=\"10\">10명 이상</option>\n//                         </select>\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"description\">자세한 설명</label>\n//                         <textarea\n//                             id=\"description\"\n//                             placeholder=\"자세한 설명을 입력해주세요.\"\n//                             value={description}\n//                             onChange={(e) => setDescription(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.buttonGroup}>\n//                         <button type=\"submit\" className={styles.submitButton} onClick={handleSubmit}>작성완료 ➔</button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default CreatePostPage;\n\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/createpostpage.module.scss';\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatePostPage({\n  setSelectedPlace,\n  addPost\n}) {\n  _s();\n  const navigate = useNavigate();\n  const baseUrl = \"http://3.37.252.66:8080\";\n  const [inputs, setInputs] = useState({\n    id: 0,\n    title: '',\n    location: '',\n    participants: '',\n    date: '',\n    time: '',\n    views: 0,\n    description: '',\n    content: '',\n    place: {\n      lat: 0,\n      lng: 0\n    }\n  });\n  const onChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n\n    // 숫자 필드에 대한 추가 처리\n    if (name === 'id' || name === 'views') {\n      setInputs({\n        ...inputs,\n        [name]: parseInt(value)\n      });\n    } else if (name === 'lat' || name === 'lng') {\n      setInputs({\n        ...inputs,\n        place: {\n          ...inputs.place,\n          [name]: parseFloat(value)\n        }\n      });\n    } else {\n      setInputs({\n        ...inputs,\n        [name]: value\n      });\n    }\n  };\n  const [places, setPlaces] = useState([]);\n  const [selectedPlace, setSelectedPlaceState] = useState(null);\n  useEffect(() => {\n    if (!inputs.location || !window.kakao || !window.kakao.maps) return;\n    const ps = new window.kakao.maps.services.Places();\n    ps.keywordSearch(inputs.location, (data, status) => {\n      if (status === window.kakao.maps.services.Status.OK) {\n        setPlaces(data);\n      }\n    });\n  }, [inputs.location]);\n  useEffect(() => {\n    if (!selectedPlace || !window.kakao || !window.kakao.maps) return;\n    const container = document.getElementById('map');\n    const options = {\n      center: new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x),\n      level: 3\n    };\n    const map = new window.kakao.maps.Map(container, options);\n    const markerPosition = new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x);\n    const marker = new window.kakao.maps.Marker({\n      position: markerPosition\n    });\n    marker.setMap(map);\n  }, [selectedPlace]);\n  const handleSelect = place => {\n    setSelectedPlaceState(place);\n    setSelectedPlace({\n      lat: place.y,\n      lng: place.x\n    });\n    setInputs({\n      ...inputs,\n      location: place.address_name,\n      place: {\n        lat: place.y,\n        lng: place.x\n      }\n    });\n    setPlaces([]);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!selectedPlace) {\n      alert('장소를 선택해주세요.');\n      return;\n    }\n    console.log(inputs);\n    addPost(inputs);\n    axios.post(`${baseUrl}/index/articles/create`, inputs).then(response => {\n      if (response.status === 200) {\n        alert('Post successful!');\n        // setData(response.data);\n        // 여기서 원하는 동작을 추가할 수 있습니다. 예: 페이지 이동 등.\n      } else {\n        alert('Post failed. Please try again.');\n      }\n    }).catch(error => {\n      if (error.response) {\n        alert(`Error: ${error.response.data}`);\n      } else {\n        alert('Error during Post');\n      }\n    });\n\n    // 폼 초기화\n    setInputs({\n      id: 0,\n      title: '',\n      location: '',\n      participants: '',\n      date: '',\n      time: '',\n      views: 0,\n      description: '',\n      content: '',\n      place: {\n        lat: 0,\n        lng: 0\n      }\n    });\n    setSelectedPlace(null);\n    navigate('/community');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pageContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.formContainer,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"title\",\n            children: \"\\uC81C\\uBAA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"title\",\n            name: \"title\",\n            placeholder: \"\\uC81C\\uBAA9\",\n            value: inputs.title,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"date\",\n            children: \"\\uB0A0\\uC9DC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            id: \"date\",\n            name: \"date\",\n            placeholder: \"\\uB0A0\\uC9DC\",\n            value: inputs.date,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"time\",\n            children: \"\\uC2DC\\uAC04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"time\",\n            id: \"time\",\n            name: \"time\",\n            placeholder: \"\\uC2DC\\uAC04\",\n            value: inputs.time,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"location\",\n            children: \"\\uC7A5\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"location\",\n            name: \"location\",\n            placeholder: \"\\uC8FC\\uC18C\\uB85C \\uAC80\\uC0C9\\uD558\\uC138\\uC694.\",\n            value: inputs.location,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 25\n          }, this), places.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles.autocompleteDropdownContainer,\n            children: places.map(place => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: styles.suggestionItem,\n              onClick: () => handleSelect(place),\n              children: [place.place_name, \" (\", place.address_name, \")\"]\n            }, place.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"map\",\n          className: styles.map\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"participants\",\n            children: \"\\uC778\\uC6D0 \\uC218\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 453,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"participants\",\n            name: \"participants\",\n            className: styles.select,\n            value: inputs.participants,\n            onChange: onChange,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"\\uC778\\uC6D0 \\uC218\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"1\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"2\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 463,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"3\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4\",\n              children: \"4\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 465,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5\",\n              children: \"5\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 466,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"6\",\n              children: \"6\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"7\",\n              children: \"7\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 468,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"8\",\n              children: \"8\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"9\",\n              children: \"9\\uBA85\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"10\\uBA85 \\uC774\\uC0C1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 454,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.formGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"description\",\n            children: \"\\uC790\\uC138\\uD55C \\uC124\\uBA85\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"description\",\n            name: \"description\",\n            placeholder: \"\\uC790\\uC138\\uD55C \\uC124\\uBA85\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n            value: inputs.description,\n            onChange: onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.buttonGroup,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: styles.submitButton,\n            children: \"\\uC791\\uC131\\uC644\\uB8CC \\u2794\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 485,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 392,\n    columnNumber: 9\n  }, this);\n}\n_s(CreatePostPage, \"2Bv89PiFML8wMHtdYbz3RAjTXJ0=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePostPage;\nexport default CreatePostPage;\nvar _c;\n$RefreshReg$(_c, \"CreatePostPage\");","map":{"version":3,"names":["React","useState","useEffect","styles","axios","useNavigate","jsxDEV","_jsxDEV","CreatePostPage","setSelectedPlace","addPost","_s","navigate","baseUrl","inputs","setInputs","id","title","location","participants","date","time","views","description","content","place","lat","lng","onChange","e","value","name","target","parseInt","parseFloat","places","setPlaces","selectedPlace","setSelectedPlaceState","window","kakao","maps","ps","services","Places","keywordSearch","data","status","Status","OK","container","document","getElementById","options","center","LatLng","y","x","level","map","Map","markerPosition","marker","Marker","position","setMap","handleSelect","address_name","handleSubmit","preventDefault","alert","console","log","post","then","response","catch","error","className","pageContainer","children","formContainer","onSubmit","formGroup","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","length","autocompleteDropdownContainer","suggestionItem","onClick","place_name","select","disabled","buttonGroup","submitButton","_c","$RefreshReg$"],"sources":["/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/CreatePostPage.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import styles from '../styles/createpostpage.module.scss';\n// import { Post } from \"../interface/posts\";\n//\n// declare global {\n//     interface Window {\n//         kakao: any;\n//     }\n// }\n//\n// // interface CreatePostPageProps {\n// //     setSelectedPlace: (place: { lat: number, lng: number } | null) => void;\n// //     addPost: (post: Post) => void;\n// // }\n//\n// // interface Post {\n// //     title: string;\n// //     date: string;\n// //     time: string;\n// //     address: string;\n// //     people: string;\n// //     description: string;\n// //     place: { lat: number, lng: number };\n// // }\n//\n// function CreatePostPage({ setSelectedPlace, addPost }: CreatePostPageProps) {\n//     const [inputs, setInputs] = useState<Post>({\n//         id: 0,\n//         title: '',\n//         location: '',\n//         participants: '',\n//         date: '',\n//         time: '',\n//         views: 0,\n//         description: '',\n//         content: '',\n//         place: {\n//             lat: 0,\n//             lng: 0\n//         }\n//     })\n//\n//     const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//         const { value, name } = e.target;\n//\n//         // 숫자 필드에 대한 추가 처리\n//         if (name === 'id' || name === 'views') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseInt(value),\n//             });\n//         } else if (name === 'lat' || name === 'lng') {\n//             setInputs({\n//                 ...inputs,\n//                 place: {\n//                     ...inputs.place,\n//                     [name]: parseFloat(value),\n//                 },\n//             });\n//         } else {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: value,\n//             });\n//         }\n//     };\n//\n//\n//     const [address, setAddress] = useState<string>('');\n//     const [places, setPlaces] = useState<any[]>([]);\n//     const [selectedPlace, setSelectedPlaceState] = useState<any>(null);\n//     const [title, setTitle] = useState<string>('');\n//     const [date, setDate] = useState<string>('');\n//     const [time, setTime] = useState<string>('');\n//     const [people, setPeople] = useState<string>('');\n//     const [description, setDescription] = useState<string>('');\n//\n//     useEffect(() => {\n//         if (!address || !window.kakao || !window.kakao.maps) return;\n//\n//         const ps = new window.kakao.maps.services.Places();\n//         ps.keywordSearch(address, (data: any[], status: any) => {\n//             if (status === window.kakao.maps.services.Status.OK) {\n//                 setPlaces(data);\n//             }\n//         });\n//     }, [address]);\n//\n//     useEffect(() => {\n//         if (!selectedPlace || !window.kakao || !window.kakao.maps) return;\n//\n//         const container = document.getElementById('map');\n//         const options = {\n//             center: new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x),\n//             level: 3,\n//         };\n//         const map = new window.kakao.maps.Map(container, options);\n//         const markerPosition = new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x);\n//         const marker = new window.kakao.maps.Marker({\n//             position: markerPosition,\n//         });\n//         marker.setMap(map);\n//     }, [selectedPlace]);\n//\n//     const handleSelect = (place: any) => {\n//         setSelectedPlaceState(place);\n//         setSelectedPlace({ lat: place.y, lng: place.x });\n//         setAddress(place.address_name);\n//         setPlaces([]);\n//     };\n//\n//     const handleSubmit = (e: React.FormEvent) => {\n//         e.preventDefault();\n//         if (!selectedPlace) {\n//             alert('장소를 선택해주세요.');\n//             return;\n//         }\n//\n//         const newPost: Post = {\n//             title,\n//             date,\n//             time,\n//             address,\n//             people,\n//             description,\n//             place: selectedPlace,\n//         };\n//\n//         addPost(newPost);\n//\n//         // 폼 초기화\n//         setTitle('');\n//         setDate('');\n//         setTime('');\n//         setAddress('');\n//         setPeople('');\n//         setDescription('');\n//         setSelectedPlace(null);\n//     };\n//\n//     return (\n//         <div className={styles.pageContainer}>\n//             <div className={styles.formContainer}>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"title\">제목</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"title\"\n//                             placeholder=\"제목\"\n//                             value={title}\n//                             onChange={(e) => setTitle(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"date\">날짜</label>\n//                         <input\n//                             type=\"date\"\n//                             id=\"date\"\n//                             placeholder=\"날짜\"\n//                             value={date}\n//                             onChange={(e) => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"time\">시간</label>\n//                         <input\n//                             type=\"time\"\n//                             id=\"time\"\n//                             placeholder=\"시간\"\n//                             value={time}\n//                             onChange={(e) => setTime(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"location\">장소</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"location\"\n//                             placeholder=\"주소로 검색하세요.\"\n//                             value={address}\n//                             onChange={(e: React.ChangeEvent<HTMLInputElement>) => setAddress(e.target.value)}\n//                         />\n//                         {places.length > 0 && (\n//                             <div className={styles.autocompleteDropdownContainer}>\n//                                 {places.map((place) => (\n//                                     <div\n//                                         key={place.id}\n//                                         className={styles.suggestionItem}\n//                                         onClick={() => handleSelect(place)}>\n//                                         {place.place_name} ({place.address_name})\n//                                     </div>\n//                                 ))}\n//                             </div>\n//                         )}\n//                     </div>\n//                     <div id=\"map\" className={styles.map}></div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"people\">인원 수</label>\n//                         <select\n//                             id=\"people\"\n//                             className={styles.select}\n//                             value={people}\n//                             onChange={(e) => setPeople(e.target.value)}\n//                         >\n//                             <option value=\"\" disabled>인원 수</option>\n//                             <option value=\"1\">1명</option>\n//                             <option value=\"2\">2명</option>\n//                             <option value=\"3\">3명</option>\n//                             <option value=\"4\">4명</option>\n//                             <option value=\"5\">5명</option>\n//                             <option value=\"6\">6명</option>\n//                             <option value=\"7\">7명</option>\n//                             <option value=\"8\">8명</option>\n//                             <option value=\"9\">9명</option>\n//                             <option value=\"10\">10명 이상</option>\n//                         </select>\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"description\">자세한 설명</label>\n//                         <textarea\n//                             id=\"description\"\n//                             placeholder=\"자세한 설명을 입력해주세요.\"\n//                             value={description}\n//                             onChange={(e) => setDescription(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.buttonGroup}>\n//                         <button type=\"submit\" className={styles.submitButton} onClick={handleSubmit}>작성완료 ➔</button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default CreatePostPage;\n\nimport React, { useState, useEffect } from 'react';\nimport styles from '../styles/createpostpage.module.scss';\nimport { Post } from \"../interface/posts\";\nimport axios from \"axios\";\nimport {useNavigate} from \"react-router-dom\";\n\ndeclare global {\n    interface Window {\n        kakao: any;\n    }\n}\n\ninterface CreatePostPageProps {\n    setSelectedPlace: (place: { lat: number, lng: number } | null) => void;\n    addPost: (post: Post) => void;\n}\n\nfunction CreatePostPage({ setSelectedPlace, addPost }: CreatePostPageProps) {\n    const navigate = useNavigate();\n    const baseUrl = \"http://3.37.252.66:8080\";\n    const [inputs, setInputs] = useState<Post>({\n        id: 0,\n        title: '',\n        location: '',\n        participants: '',\n        date: '',\n        time: '',\n        views: 0,\n        description: '',\n        content: '',\n        place: {\n            lat: 0,\n            lng: 0\n        }\n    });\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n        const { value, name } = e.target;\n\n        // 숫자 필드에 대한 추가 처리\n        if (name === 'id' || name === 'views') {\n            setInputs({\n                ...inputs,\n                [name]: parseInt(value),\n            });\n        } else if (name === 'lat' || name === 'lng') {\n            setInputs({\n                ...inputs,\n                place: {\n                    ...inputs.place,\n                    [name]: parseFloat(value),\n                },\n            });\n        } else {\n            setInputs({\n                ...inputs,\n                [name]: value,\n            });\n        }\n    };\n\n    const [places, setPlaces] = useState<any[]>([]);\n    const [selectedPlace, setSelectedPlaceState] = useState<any>(null);\n\n    useEffect(() => {\n        if (!inputs.location || !window.kakao || !window.kakao.maps) return;\n\n        const ps = new window.kakao.maps.services.Places();\n        ps.keywordSearch(inputs.location, (data: any[], status: any) => {\n            if (status === window.kakao.maps.services.Status.OK) {\n                setPlaces(data);\n            }\n        });\n    }, [inputs.location]);\n\n    useEffect(() => {\n        if (!selectedPlace || !window.kakao || !window.kakao.maps) return;\n\n        const container = document.getElementById('map');\n        const options = {\n            center: new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x),\n            level: 3,\n        };\n        const map = new window.kakao.maps.Map(container, options);\n        const markerPosition = new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x);\n        const marker = new window.kakao.maps.Marker({\n            position: markerPosition,\n        });\n        marker.setMap(map);\n    }, [selectedPlace]);\n\n    const handleSelect = (place: any) => {\n        setSelectedPlaceState(place);\n        setSelectedPlace({ lat: place.y, lng: place.x });\n        setInputs({\n            ...inputs,\n            location: place.address_name,\n            place: {\n                lat: place.y,\n                lng: place.x\n            }\n        });\n        setPlaces([]);\n    };\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        if (!selectedPlace) {\n            alert('장소를 선택해주세요.');\n            return;\n        }\n        console.log(inputs)\n        addPost(inputs);\n\n        axios.post(`${baseUrl}/index/articles/create`, inputs)\n            .then((response) => {\n                if (response.status === 200) {\n                    alert('Post successful!');\n                    // setData(response.data);\n                    // 여기서 원하는 동작을 추가할 수 있습니다. 예: 페이지 이동 등.\n                } else {\n                    alert('Post failed. Please try again.');\n                }\n            })\n            .catch(error => {\n                if (error.response) {\n                    alert(`Error: ${error.response.data}`);\n                } else {\n                    alert('Error during Post');\n                }\n            });\n\n        // 폼 초기화\n        setInputs({\n            id: 0,\n            title: '',\n            location: '',\n            participants: '',\n            date: '',\n            time: '',\n            views: 0,\n            description: '',\n            content: '',\n            place: {\n                lat: 0,\n                lng: 0\n            }\n        });\n        setSelectedPlace(null);\n        navigate('/community')\n    };\n\n    return (\n        <div className={styles.pageContainer}>\n            <div className={styles.formContainer}>\n                <form onSubmit={handleSubmit}>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"title\">제목</label>\n                        <input\n                            type=\"text\"\n                            id=\"title\"\n                            name=\"title\"\n                            placeholder=\"제목\"\n                            value={inputs.title}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"date\">날짜</label>\n                        <input\n                            type=\"date\"\n                            id=\"date\"\n                            name=\"date\"\n                            placeholder=\"날짜\"\n                            value={inputs.date}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"time\">시간</label>\n                        <input\n                            type=\"time\"\n                            id=\"time\"\n                            name=\"time\"\n                            placeholder=\"시간\"\n                            value={inputs.time}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"location\">장소</label>\n                        <input\n                            type=\"text\"\n                            id=\"location\"\n                            name=\"location\"\n                            placeholder=\"주소로 검색하세요.\"\n                            value={inputs.location}\n                            onChange={onChange}\n                        />\n                        {places.length > 0 && (\n                            <div className={styles.autocompleteDropdownContainer}>\n                                {places.map((place) => (\n                                    <div\n                                        key={place.id}\n                                        className={styles.suggestionItem}\n                                        onClick={() => handleSelect(place)}>\n                                        {place.place_name} ({place.address_name})\n                                    </div>\n                                ))}\n                            </div>\n                        )}\n                    </div>\n                    <div id=\"map\" className={styles.map}></div>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"participants\">인원 수</label>\n                        <select\n                            id=\"participants\"\n                            name=\"participants\"\n                            className={styles.select}\n                            value={inputs.participants}\n                            onChange={onChange}\n                        >\n                            <option value=\"\" disabled>인원 수</option>\n                            <option value=\"1\">1명</option>\n                            <option value=\"2\">2명</option>\n                            <option value=\"3\">3명</option>\n                            <option value=\"4\">4명</option>\n                            <option value=\"5\">5명</option>\n                            <option value=\"6\">6명</option>\n                            <option value=\"7\">7명</option>\n                            <option value=\"8\">8명</option>\n                            <option value=\"9\">9명</option>\n                            <option value=\"10\">10명 이상</option>\n                        </select>\n                    </div>\n                    <div className={styles.formGroup}>\n                        <label htmlFor=\"description\">자세한 설명</label>\n                        <textarea\n                            id=\"description\"\n                            name=\"description\"\n                            placeholder=\"자세한 설명을 입력해주세요.\"\n                            value={inputs.description}\n                            onChange={onChange}\n                        />\n                    </div>\n                    <div className={styles.buttonGroup}>\n                        <button type=\"submit\" className={styles.submitButton}>작성완료 ➔</button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default CreatePostPage;\n\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}