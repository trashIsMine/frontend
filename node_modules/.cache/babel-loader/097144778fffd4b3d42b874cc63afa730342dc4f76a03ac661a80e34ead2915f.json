{"ast":null,"code":"var _jsxFileName = \"/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/MapPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"../styles/mappage.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapPage({\n  selectedPlace,\n  login,\n  setLogin\n}) {\n  _s();\n  if (login) {\n    setLogin(true);\n  } else {\n    setLogin(false);\n  }\n  const [center, setCenter] = useState({\n    lat: 33.450701,\n    lng: 126.570667\n  });\n  const [position, setPosition] = useState({\n    lat: 33.450701,\n    lng: 126.570667\n  });\n\n  // useEffect(() => {\n  //     const initializeMap = (latitude: number, longitude: number) => {\n  //         // 지도생성\n  //         const container = document.getElementById('map');\n  //         const options = {\n  //             center: new window.kakao.maps.LatLng(latitude, longitude),\n  //             level: 3\n  //         };\n  //         const map = new window.kakao.maps.Map(container, options);\n  //         // 여기까지\n  //\n  //         // 현재 위치에 마커 표시\n  //         const currentMarkerPosition = new window.kakao.maps.LatLng(latitude, longitude);\n  //         const currentMarker = new window.kakao.maps.Marker({\n  //             position: currentMarkerPosition,\n  //             title: \"현재 위치\"\n  //         });\n  //         currentMarker.setMap(map);\n  //\n  //         if (selectedPlace) {\n  //             const markerPosition = new window.kakao.maps.LatLng(selectedPlace.lat, selectedPlace.lng);\n  //             const marker = new window.kakao.maps.Marker({\n  //                 position: markerPosition\n  //             });\n  //\n  //             const iwContent = '<div style=\"padding:5px;\">선택된 장소</div>',\n  //                 iwRemoveable = true;\n  //\n  //             const infowindow = new window.kakao.maps.InfoWindow({\n  //                 content: iwContent,\n  //                 removable: iwRemoveable\n  //             });\n  //\n  //             marker.setMap(map);\n  //\n  //             window.kakao.maps.event.addListener(marker, 'click', function () {\n  //                 infowindow.open(map, marker);\n  //             });\n  //         }\n  //     };\n  //\n  //     navigator.geolocation.getCurrentPosition((pos) => {\n  //         const latitude = pos.coords.latitude;\n  //         const longitude = pos.coords.longitude;\n  //         setCenter({ lat: latitude, lng: longitude });\n  //         setPosition({ lat: latitude, lng: longitude });\n  //         initializeMap(latitude, longitude);\n  //     });\n  //\n  //     const watchId = navigator.geolocation.watchPosition((pos) => {\n  //         const latitude = pos.coords.latitude;\n  //         const longitude = pos.coords.longitude;\n  //         setPosition({ lat: latitude, lng: longitude });\n  //     });\n  //\n  //     return () => {\n  //         navigator.geolocation.clearWatch(watchId);\n  //     };\n  // }, [selectedPlace, position]);\n\n  useEffect(() => {\n    if (position.lat !== 0 && position.lng !== 0) {\n      const container = document.getElementById('map');\n      const options = {\n        center: new window.kakao.maps.LatLng(position.lat, position.lng),\n        level: 3\n      };\n      const map = new window.kakao.maps.Map(container, options);\n      const currentMarkerPosition = new window.kakao.maps.LatLng(position.lat, position.lng);\n      const currentMarker = new window.kakao.maps.Marker({\n        position: currentMarkerPosition,\n        title: \"현재 위치\"\n      });\n      currentMarker.setMap(map);\n    }\n  }, [position]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    className: styles.map\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n}\n_s(MapPage, \"ta//Azy/tw8ERq+GE1l7Z/v6T8c=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","MapPage","selectedPlace","login","setLogin","_s","center","setCenter","lat","lng","position","setPosition","container","document","getElementById","options","window","kakao","maps","LatLng","level","map","Map","currentMarkerPosition","currentMarker","Marker","title","setMap","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/MapPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport styles from \"../styles/mappage.module.scss\";\n\ndeclare global {\n    interface Window {\n        kakao: any;\n    }\n}\n\ninterface MapPageProps {\n    selectedPlace: { lat: number, lng: number } | null; // 예시 타입, 필요에 따라 수정\n    login: boolean;\n    setLogin: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nfunction MapPage({ selectedPlace, login, setLogin }: MapPageProps) {\n    if (login) {\n        setLogin(true);\n    }\n    else {\n        setLogin(false);\n    }\n    const [center, setCenter] = useState<{ lat: number, lng: number }>({ lat: 33.450701, lng: 126.570667 });\n    const [position, setPosition] = useState<{ lat: number, lng: number }>({ lat: 33.450701, lng: 126.570667 });\n\n    // useEffect(() => {\n    //     const initializeMap = (latitude: number, longitude: number) => {\n    //         // 지도생성\n    //         const container = document.getElementById('map');\n    //         const options = {\n    //             center: new window.kakao.maps.LatLng(latitude, longitude),\n    //             level: 3\n    //         };\n    //         const map = new window.kakao.maps.Map(container, options);\n    //         // 여기까지\n    //\n    //         // 현재 위치에 마커 표시\n    //         const currentMarkerPosition = new window.kakao.maps.LatLng(latitude, longitude);\n    //         const currentMarker = new window.kakao.maps.Marker({\n    //             position: currentMarkerPosition,\n    //             title: \"현재 위치\"\n    //         });\n    //         currentMarker.setMap(map);\n    //\n    //         if (selectedPlace) {\n    //             const markerPosition = new window.kakao.maps.LatLng(selectedPlace.lat, selectedPlace.lng);\n    //             const marker = new window.kakao.maps.Marker({\n    //                 position: markerPosition\n    //             });\n    //\n    //             const iwContent = '<div style=\"padding:5px;\">선택된 장소</div>',\n    //                 iwRemoveable = true;\n    //\n    //             const infowindow = new window.kakao.maps.InfoWindow({\n    //                 content: iwContent,\n    //                 removable: iwRemoveable\n    //             });\n    //\n    //             marker.setMap(map);\n    //\n    //             window.kakao.maps.event.addListener(marker, 'click', function () {\n    //                 infowindow.open(map, marker);\n    //             });\n    //         }\n    //     };\n    //\n    //     navigator.geolocation.getCurrentPosition((pos) => {\n    //         const latitude = pos.coords.latitude;\n    //         const longitude = pos.coords.longitude;\n    //         setCenter({ lat: latitude, lng: longitude });\n    //         setPosition({ lat: latitude, lng: longitude });\n    //         initializeMap(latitude, longitude);\n    //     });\n    //\n    //     const watchId = navigator.geolocation.watchPosition((pos) => {\n    //         const latitude = pos.coords.latitude;\n    //         const longitude = pos.coords.longitude;\n    //         setPosition({ lat: latitude, lng: longitude });\n    //     });\n    //\n    //     return () => {\n    //         navigator.geolocation.clearWatch(watchId);\n    //     };\n    // }, [selectedPlace, position]);\n\n    useEffect(() => {\n        if (position.lat !== 0 && position.lng !== 0) {\n            const container = document.getElementById('map');\n            const options = {\n                center: new window.kakao.maps.LatLng(position.lat, position.lng),\n                level: 3\n            };\n            const map = new window.kakao.maps.Map(container, options);\n\n            const currentMarkerPosition = new window.kakao.maps.LatLng(position.lat, position.lng);\n            const currentMarker = new window.kakao.maps.Marker({\n                position: currentMarkerPosition,\n                title: \"현재 위치\"\n            });\n            currentMarker.setMap(map);\n        }\n    }, [position]);\n\n    return (\n        <div id=\"map\" className={styles.map}>\n        </div>\n    );\n}\n\nexport default MapPage;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAcnD,SAASC,OAAOA,CAAC;EAAEC,aAAa;EAAEC,KAAK;EAAEC;AAAuB,CAAC,EAAE;EAAAC,EAAA;EAC/D,IAAIF,KAAK,EAAE;IACPC,QAAQ,CAAC,IAAI,CAAC;EAClB,CAAC,MACI;IACDA,QAAQ,CAAC,KAAK,CAAC;EACnB;EACA,MAAM,CAACE,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAA+B;IAAEW,GAAG,EAAE,SAAS;IAAEC,GAAG,EAAE;EAAW,CAAC,CAAC;EACvG,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAA+B;IAAEW,GAAG,EAAE,SAAS;IAAEC,GAAG,EAAE;EAAW,CAAC,CAAC;;EAE3G;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAb,SAAS,CAAC,MAAM;IACZ,IAAIc,QAAQ,CAACF,GAAG,KAAK,CAAC,IAAIE,QAAQ,CAACD,GAAG,KAAK,CAAC,EAAE;MAC1C,MAAMG,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;MAChD,MAAMC,OAAO,GAAG;QACZT,MAAM,EAAE,IAAIU,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACT,QAAQ,CAACF,GAAG,EAAEE,QAAQ,CAACD,GAAG,CAAC;QAChEW,KAAK,EAAE;MACX,CAAC;MACD,MAAMC,GAAG,GAAG,IAAIL,MAAM,CAACC,KAAK,CAACC,IAAI,CAACI,GAAG,CAACV,SAAS,EAAEG,OAAO,CAAC;MAEzD,MAAMQ,qBAAqB,GAAG,IAAIP,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACT,QAAQ,CAACF,GAAG,EAAEE,QAAQ,CAACD,GAAG,CAAC;MACtF,MAAMe,aAAa,GAAG,IAAIR,MAAM,CAACC,KAAK,CAACC,IAAI,CAACO,MAAM,CAAC;QAC/Cf,QAAQ,EAAEa,qBAAqB;QAC/BG,KAAK,EAAE;MACX,CAAC,CAAC;MACFF,aAAa,CAACG,MAAM,CAACN,GAAG,CAAC;IAC7B;EACJ,CAAC,EAAE,CAACX,QAAQ,CAAC,CAAC;EAEd,oBACIV,OAAA;IAAK4B,EAAE,EAAC,KAAK;IAACC,SAAS,EAAE/B,MAAM,CAACuB;EAAI;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd;AAAC5B,EAAA,CA5FQJ,OAAO;AAAAiC,EAAA,GAAPjC,OAAO;AA8FhB,eAAeA,OAAO;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}