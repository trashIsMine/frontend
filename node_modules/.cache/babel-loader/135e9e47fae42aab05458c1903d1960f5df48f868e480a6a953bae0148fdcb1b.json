{"ast":null,"code":"var _jsxFileName = \"/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/MapPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\n\n// @ts-ignore\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  kakao\n} = window;\nfunction MapPage() {\n  _s();\n  const [logation, setLocation] = useState({\n    lat: 0.0,\n    lng: 0.0\n  });\n  const markerPosition = new kakao.maps.LatLng(33.450701, 126.570667);\n  const marker = new kakao.maps.Marker({\n    position: markerPosition\n  });\n  // 마커를 클릭했을 때 마커 위에 표시할 인포윈도우를 생성합니다\n  const iwContent = '<div style=\"padding:5px;\">Hello World!</div>',\n    // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n    iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n  // 인포윈도우를 생성합니다\n  const infowindow = new kakao.maps.InfoWindow({\n    content: iwContent,\n    removable: iwRemoveable\n  });\n  useEffect(() => {\n    const container = document.getElementById('map');\n    const options = {\n      center: new kakao.maps.LatLng(33.450701, 126.570667),\n      level: 3\n    };\n    const map = new kakao.maps.Map(container, options);\n    marker.setMap(map);\n    kakao.maps.event.addListener(marker, 'click', function () {\n      infowindow.open(map, marker);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    style: {\n      width: 1250,\n      height: 1250\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(MapPage, \"DJiFj2liUUWMmhYWu1ILOIj6s+I=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","kakao","window","MapPage","_s","logation","setLocation","lat","lng","markerPosition","maps","LatLng","marker","Marker","position","iwContent","iwRemoveable","infowindow","InfoWindow","content","removable","container","document","getElementById","options","center","level","map","Map","setMap","event","addListener","open","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/MapPage.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\n\n// @ts-ignore\nconst { kakao } = window\n\nfunction MapPage() {\n    const [logation, setLocation] = useState({\n        lat: 0.0,\n        lng: 0.0\n    })\n\n    const markerPosition = new kakao.maps.LatLng(33.450701, 126.570667)\n    const marker = new kakao.maps.Marker({\n        position: markerPosition\n    })\n    // 마커를 클릭했을 때 마커 위에 표시할 인포윈도우를 생성합니다\n    const iwContent = '<div style=\"padding:5px;\">Hello World!</div>', // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n        iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n// 인포윈도우를 생성합니다\n    const infowindow = new kakao.maps.InfoWindow({\n        content : iwContent,\n        removable : iwRemoveable\n    });\n\n    useEffect(() => {\n        const container = document.getElementById('map');\n        const options = {\n            center: new kakao.maps.LatLng(33.450701, 126.570667),\n            level: 3\n        };\n        const map = new kakao.maps.Map(container, options)\n\n        marker.setMap(map);\n\n        kakao.maps.event.addListener(marker, 'click', function (){\n            infowindow.open(map, marker);\n        })\n    }, []);\n\n    return (\n        <div id=\"map\" style={{width: 1250, height: 1250}}>\n        </div>\n    );\n}\n\nexport default MapPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;;AAEhD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAM;EAAEC;AAAM,CAAC,GAAGC,MAAM;AAExB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC;IACrCS,GAAG,EAAE,GAAG;IACRC,GAAG,EAAE;EACT,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAG,IAAIR,KAAK,CAACS,IAAI,CAACC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC;EACnE,MAAMC,MAAM,GAAG,IAAIX,KAAK,CAACS,IAAI,CAACG,MAAM,CAAC;IACjCC,QAAQ,EAAEL;EACd,CAAC,CAAC;EACF;EACA,MAAMM,SAAS,GAAG,8CAA8C;IAAE;IAC9DC,YAAY,GAAG,IAAI,CAAC,CAAC;;EAE7B;EACI,MAAMC,UAAU,GAAG,IAAIhB,KAAK,CAACS,IAAI,CAACQ,UAAU,CAAC;IACzCC,OAAO,EAAGJ,SAAS;IACnBK,SAAS,EAAGJ;EAChB,CAAC,CAAC;EAEFnB,SAAS,CAAC,MAAM;IACZ,MAAMwB,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;IAChD,MAAMC,OAAO,GAAG;MACZC,MAAM,EAAE,IAAIxB,KAAK,CAACS,IAAI,CAACC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC;MACpDe,KAAK,EAAE;IACX,CAAC;IACD,MAAMC,GAAG,GAAG,IAAI1B,KAAK,CAACS,IAAI,CAACkB,GAAG,CAACP,SAAS,EAAEG,OAAO,CAAC;IAElDZ,MAAM,CAACiB,MAAM,CAACF,GAAG,CAAC;IAElB1B,KAAK,CAACS,IAAI,CAACoB,KAAK,CAACC,WAAW,CAACnB,MAAM,EAAE,OAAO,EAAE,YAAW;MACrDK,UAAU,CAACe,IAAI,CAACL,GAAG,EAAEf,MAAM,CAAC;IAChC,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIZ,OAAA;IAAKiC,EAAE,EAAC,KAAK;IAACC,KAAK,EAAE;MAACC,KAAK,EAAE,IAAI;MAAEC,MAAM,EAAE;IAAI;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5C,CAAC;AAEd;AAACpC,EAAA,CAvCQD,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AAyChB,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}