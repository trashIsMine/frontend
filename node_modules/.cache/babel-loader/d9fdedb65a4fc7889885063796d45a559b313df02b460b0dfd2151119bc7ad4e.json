{"ast":null,"code":"var _jsxFileName = \"/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/CreatePostPage.tsx\",\n  _s = $RefreshSig$();\n// import React, { useState, useEffect } from 'react';\n// import styles from '../styles/createpostpage.module.scss';\n// import { Post } from \"../interface/posts\";\n//\n// declare global {\n//     interface Window {\n//         kakao: any;\n//     }\n// }\n//\n// // interface CreatePostPageProps {\n// //     setSelectedPlace: (place: { lat: number, lng: number } | null) => void;\n// //     addPost: (post: Post) => void;\n// // }\n//\n// // interface Post {\n// //     title: string;\n// //     date: string;\n// //     time: string;\n// //     address: string;\n// //     people: string;\n// //     description: string;\n// //     place: { lat: number, lng: number };\n// // }\n//\n// function CreatePostPage({ setSelectedPlace, addPost }: CreatePostPageProps) {\n//     const [inputs, setInputs] = useState<Post>({\n//         id: 0,\n//         title: '',\n//         location: '',\n//         participants: '',\n//         date: '',\n//         time: '',\n//         views: 0,\n//         description: '',\n//         content: '',\n//         place: {\n//             lat: 0,\n//             lng: 0\n//         }\n//     })\n//\n//     const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//         const { value, name } = e.target;\n//\n//         // 숫자 필드에 대한 추가 처리\n//         if (name === 'id' || name === 'views') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseInt(value),\n//             });\n//         } else if (name === 'lat' || name === 'lng') {\n//             setInputs({\n//                 ...inputs,\n//                 place: {\n//                     ...inputs.place,\n//                     [name]: parseFloat(value),\n//                 },\n//             });\n//         } else {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: value,\n//             });\n//         }\n//     };\n//\n//\n//     const [address, setAddress] = useState<string>('');\n//     const [places, setPlaces] = useState<any[]>([]);\n//     const [selectedPlace, setSelectedPlaceState] = useState<any>(null);\n//     const [title, setTitle] = useState<string>('');\n//     const [date, setDate] = useState<string>('');\n//     const [time, setTime] = useState<string>('');\n//     const [people, setPeople] = useState<string>('');\n//     const [description, setDescription] = useState<string>('');\n//\n//     useEffect(() => {\n//         if (!address || !window.kakao || !window.kakao.maps) return;\n//\n//         const ps = new window.kakao.maps.services.Places();\n//         ps.keywordSearch(address, (data: any[], status: any) => {\n//             if (status === window.kakao.maps.services.Status.OK) {\n//                 setPlaces(data);\n//             }\n//         });\n//     }, [address]);\n//\n//     useEffect(() => {\n//         if (!selectedPlace || !window.kakao || !window.kakao.maps) return;\n//\n//         const container = document.getElementById('map');\n//         const options = {\n//             center: new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x),\n//             level: 3,\n//         };\n//         const map = new window.kakao.maps.Map(container, options);\n//         const markerPosition = new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x);\n//         const marker = new window.kakao.maps.Marker({\n//             position: markerPosition,\n//         });\n//         marker.setMap(map);\n//     }, [selectedPlace]);\n//\n//     const handleSelect = (place: any) => {\n//         setSelectedPlaceState(place);\n//         setSelectedPlace({ lat: place.y, lng: place.x });\n//         setAddress(place.address_name);\n//         setPlaces([]);\n//     };\n//\n//     const handleSubmit = (e: React.FormEvent) => {\n//         e.preventDefault();\n//         if (!selectedPlace) {\n//             alert('장소를 선택해주세요.');\n//             return;\n//         }\n//\n//         const newPost: Post = {\n//             title,\n//             date,\n//             time,\n//             address,\n//             people,\n//             description,\n//             place: selectedPlace,\n//         };\n//\n//         addPost(newPost);\n//\n//         // 폼 초기화\n//         setTitle('');\n//         setDate('');\n//         setTime('');\n//         setAddress('');\n//         setPeople('');\n//         setDescription('');\n//         setSelectedPlace(null);\n//     };\n//\n//     return (\n//         <div className={styles.pageContainer}>\n//             <div className={styles.formContainer}>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"title\">제목</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"title\"\n//                             placeholder=\"제목\"\n//                             value={title}\n//                             onChange={(e) => setTitle(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"date\">날짜</label>\n//                         <input\n//                             type=\"date\"\n//                             id=\"date\"\n//                             placeholder=\"날짜\"\n//                             value={date}\n//                             onChange={(e) => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"time\">시간</label>\n//                         <input\n//                             type=\"time\"\n//                             id=\"time\"\n//                             placeholder=\"시간\"\n//                             value={time}\n//                             onChange={(e) => setTime(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"location\">장소</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"location\"\n//                             placeholder=\"주소로 검색하세요.\"\n//                             value={address}\n//                             onChange={(e: React.ChangeEvent<HTMLInputElement>) => setAddress(e.target.value)}\n//                         />\n//                         {places.length > 0 && (\n//                             <div className={styles.autocompleteDropdownContainer}>\n//                                 {places.map((place) => (\n//                                     <div\n//                                         key={place.id}\n//                                         className={styles.suggestionItem}\n//                                         onClick={() => handleSelect(place)}>\n//                                         {place.place_name} ({place.address_name})\n//                                     </div>\n//                                 ))}\n//                             </div>\n//                         )}\n//                     </div>\n//                     <div id=\"map\" className={styles.map}></div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"people\">인원 수</label>\n//                         <select\n//                             id=\"people\"\n//                             className={styles.select}\n//                             value={people}\n//                             onChange={(e) => setPeople(e.target.value)}\n//                         >\n//                             <option value=\"\" disabled>인원 수</option>\n//                             <option value=\"1\">1명</option>\n//                             <option value=\"2\">2명</option>\n//                             <option value=\"3\">3명</option>\n//                             <option value=\"4\">4명</option>\n//                             <option value=\"5\">5명</option>\n//                             <option value=\"6\">6명</option>\n//                             <option value=\"7\">7명</option>\n//                             <option value=\"8\">8명</option>\n//                             <option value=\"9\">9명</option>\n//                             <option value=\"10\">10명 이상</option>\n//                         </select>\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"description\">자세한 설명</label>\n//                         <textarea\n//                             id=\"description\"\n//                             placeholder=\"자세한 설명을 입력해주세요.\"\n//                             value={description}\n//                             onChange={(e) => setDescription(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.buttonGroup}>\n//                         <button type=\"submit\" className={styles.submitButton} onClick={handleSubmit}>작성완료 ➔</button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default CreatePostPage;\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from '../styles/createpostpage.module.scss';\nimport { EmptyPost } from \"../interface/posts\"; // Assuming EmptyPost is exported\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreatePostPage({\n  addPost\n}) {\n  _s();\n  const navigate = useNavigate();\n  const baseUrl = \"http://3.37.252.66:8080\";\n  const [inputs, setInputs] = useState(EmptyPost);\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name === 'lat' || name === 'lng') {\n      setInputs(prev => ({\n        ...prev,\n        place: {\n          ...prev.place,\n          [name]: parseFloat(value)\n        }\n      }));\n    } else {\n      setInputs(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n  useEffect(() => {\n    if (!inputs.location || !window.kakao || !window.kakao.maps) return;\n    const ps = new window.kakao.maps.services.Places();\n    ps.keywordSearch(inputs.location, (data, status) => {\n      if (status === window.kakao.maps.services.Status.OK && data.length) {\n        setInputs(prev => ({\n          ...prev,\n          place: {\n            lat: data[0].y,\n            lng: data[0].x\n          }\n        }));\n      }\n    });\n  }, [inputs.location]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(`${baseUrl}/index/articles/create`, inputs);\n      if (response.status === 200) {\n        alert('Post successful!');\n        addPost(inputs);\n        navigate('/community');\n      } else {\n        alert('Post failed. Please try again.');\n      }\n    } catch (error) {\n      var _error$response;\n      alert(`Error: ${((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || 'Error during post creation'}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.pageContainer,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: styles.formContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"\\uC81C\\uBAA9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"title\",\n        value: inputs.title,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"\\uB0A0\\uC9DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"date\",\n        value: inputs.date,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"time\",\n        children: \"\\uC2DC\\uAC04\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"time\",\n        name: \"time\",\n        value: inputs.time,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"location\",\n        children: \"\\uC7A5\\uC18C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"location\",\n        value: inputs.location,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"participants\",\n        children: \"\\uC778\\uC6D0 \\uC218\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"participants\",\n        value: inputs.participants,\n        onChange: onChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\uC778\\uC6D0 \\uC218 \\uC120\\uD0DD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 21\n        }, this), [...Array(10).keys()].map(n => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: n + 1,\n          children: [n + 1, \"\\uBA85\"]\n        }, n, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 53\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"\\uC790\\uC138\\uD55C \\uC124\\uBA85\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: inputs.description,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        children: \"\\uC791\\uC131\\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 311,\n    columnNumber: 9\n  }, this);\n}\n_s(CreatePostPage, \"8LK1880AHPHZ9rlh/PU/oyKTATE=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePostPage;\nexport default CreatePostPage;\nvar _c;\n$RefreshReg$(_c, \"CreatePostPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","styles","EmptyPost","jsxDEV","_jsxDEV","CreatePostPage","addPost","_s","navigate","baseUrl","inputs","setInputs","onChange","e","name","value","target","prev","place","parseFloat","location","window","kakao","maps","ps","services","Places","keywordSearch","data","status","Status","OK","length","lat","y","lng","x","handleSubmit","preventDefault","response","post","alert","error","_error$response","className","pageContainer","children","onSubmit","formContainer","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","title","date","time","participants","Array","keys","map","n","description","submitButton","_c","$RefreshReg$"],"sources":["/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/CreatePostPage.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import styles from '../styles/createpostpage.module.scss';\n// import { Post } from \"../interface/posts\";\n//\n// declare global {\n//     interface Window {\n//         kakao: any;\n//     }\n// }\n//\n// // interface CreatePostPageProps {\n// //     setSelectedPlace: (place: { lat: number, lng: number } | null) => void;\n// //     addPost: (post: Post) => void;\n// // }\n//\n// // interface Post {\n// //     title: string;\n// //     date: string;\n// //     time: string;\n// //     address: string;\n// //     people: string;\n// //     description: string;\n// //     place: { lat: number, lng: number };\n// // }\n//\n// function CreatePostPage({ setSelectedPlace, addPost }: CreatePostPageProps) {\n//     const [inputs, setInputs] = useState<Post>({\n//         id: 0,\n//         title: '',\n//         location: '',\n//         participants: '',\n//         date: '',\n//         time: '',\n//         views: 0,\n//         description: '',\n//         content: '',\n//         place: {\n//             lat: 0,\n//             lng: 0\n//         }\n//     })\n//\n//     const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//         const { value, name } = e.target;\n//\n//         // 숫자 필드에 대한 추가 처리\n//         if (name === 'id' || name === 'views') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseInt(value),\n//             });\n//         } else if (name === 'lat' || name === 'lng') {\n//             setInputs({\n//                 ...inputs,\n//                 place: {\n//                     ...inputs.place,\n//                     [name]: parseFloat(value),\n//                 },\n//             });\n//         } else {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: value,\n//             });\n//         }\n//     };\n//\n//\n//     const [address, setAddress] = useState<string>('');\n//     const [places, setPlaces] = useState<any[]>([]);\n//     const [selectedPlace, setSelectedPlaceState] = useState<any>(null);\n//     const [title, setTitle] = useState<string>('');\n//     const [date, setDate] = useState<string>('');\n//     const [time, setTime] = useState<string>('');\n//     const [people, setPeople] = useState<string>('');\n//     const [description, setDescription] = useState<string>('');\n//\n//     useEffect(() => {\n//         if (!address || !window.kakao || !window.kakao.maps) return;\n//\n//         const ps = new window.kakao.maps.services.Places();\n//         ps.keywordSearch(address, (data: any[], status: any) => {\n//             if (status === window.kakao.maps.services.Status.OK) {\n//                 setPlaces(data);\n//             }\n//         });\n//     }, [address]);\n//\n//     useEffect(() => {\n//         if (!selectedPlace || !window.kakao || !window.kakao.maps) return;\n//\n//         const container = document.getElementById('map');\n//         const options = {\n//             center: new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x),\n//             level: 3,\n//         };\n//         const map = new window.kakao.maps.Map(container, options);\n//         const markerPosition = new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x);\n//         const marker = new window.kakao.maps.Marker({\n//             position: markerPosition,\n//         });\n//         marker.setMap(map);\n//     }, [selectedPlace]);\n//\n//     const handleSelect = (place: any) => {\n//         setSelectedPlaceState(place);\n//         setSelectedPlace({ lat: place.y, lng: place.x });\n//         setAddress(place.address_name);\n//         setPlaces([]);\n//     };\n//\n//     const handleSubmit = (e: React.FormEvent) => {\n//         e.preventDefault();\n//         if (!selectedPlace) {\n//             alert('장소를 선택해주세요.');\n//             return;\n//         }\n//\n//         const newPost: Post = {\n//             title,\n//             date,\n//             time,\n//             address,\n//             people,\n//             description,\n//             place: selectedPlace,\n//         };\n//\n//         addPost(newPost);\n//\n//         // 폼 초기화\n//         setTitle('');\n//         setDate('');\n//         setTime('');\n//         setAddress('');\n//         setPeople('');\n//         setDescription('');\n//         setSelectedPlace(null);\n//     };\n//\n//     return (\n//         <div className={styles.pageContainer}>\n//             <div className={styles.formContainer}>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"title\">제목</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"title\"\n//                             placeholder=\"제목\"\n//                             value={title}\n//                             onChange={(e) => setTitle(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"date\">날짜</label>\n//                         <input\n//                             type=\"date\"\n//                             id=\"date\"\n//                             placeholder=\"날짜\"\n//                             value={date}\n//                             onChange={(e) => setDate(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"time\">시간</label>\n//                         <input\n//                             type=\"time\"\n//                             id=\"time\"\n//                             placeholder=\"시간\"\n//                             value={time}\n//                             onChange={(e) => setTime(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"location\">장소</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"location\"\n//                             placeholder=\"주소로 검색하세요.\"\n//                             value={address}\n//                             onChange={(e: React.ChangeEvent<HTMLInputElement>) => setAddress(e.target.value)}\n//                         />\n//                         {places.length > 0 && (\n//                             <div className={styles.autocompleteDropdownContainer}>\n//                                 {places.map((place) => (\n//                                     <div\n//                                         key={place.id}\n//                                         className={styles.suggestionItem}\n//                                         onClick={() => handleSelect(place)}>\n//                                         {place.place_name} ({place.address_name})\n//                                     </div>\n//                                 ))}\n//                             </div>\n//                         )}\n//                     </div>\n//                     <div id=\"map\" className={styles.map}></div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"people\">인원 수</label>\n//                         <select\n//                             id=\"people\"\n//                             className={styles.select}\n//                             value={people}\n//                             onChange={(e) => setPeople(e.target.value)}\n//                         >\n//                             <option value=\"\" disabled>인원 수</option>\n//                             <option value=\"1\">1명</option>\n//                             <option value=\"2\">2명</option>\n//                             <option value=\"3\">3명</option>\n//                             <option value=\"4\">4명</option>\n//                             <option value=\"5\">5명</option>\n//                             <option value=\"6\">6명</option>\n//                             <option value=\"7\">7명</option>\n//                             <option value=\"8\">8명</option>\n//                             <option value=\"9\">9명</option>\n//                             <option value=\"10\">10명 이상</option>\n//                         </select>\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"description\">자세한 설명</label>\n//                         <textarea\n//                             id=\"description\"\n//                             placeholder=\"자세한 설명을 입력해주세요.\"\n//                             value={description}\n//                             onChange={(e) => setDescription(e.target.value)}\n//                         />\n//                     </div>\n//                     <div className={styles.buttonGroup}>\n//                         <button type=\"submit\" className={styles.submitButton} onClick={handleSubmit}>작성완료 ➔</button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default CreatePostPage;\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from '../styles/createpostpage.module.scss';\nimport { Post, EmptyPost } from \"../interface/posts\"; // Assuming EmptyPost is exported\n\ndeclare global {\n    interface Window {\n        kakao: any;\n    }\n}\n\ninterface CreatePostPageProps {\n    addPost: (post: Post) => void;\n}\n\nfunction CreatePostPage({ addPost }: CreatePostPageProps) {\n    const navigate = useNavigate();\n    const baseUrl = \"http://3.37.252.66:8080\";\n    const [inputs, setInputs] = useState<Post>(EmptyPost);\n\n    const onChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n        const { name, value } = e.target;\n        if (name === 'lat' || name === 'lng') {\n            setInputs(prev => ({\n                ...prev,\n                place: {\n                    ...prev.place,\n                    [name]: parseFloat(value)\n                }\n            }));\n        } else {\n            setInputs(prev => ({\n                ...prev,\n                [name]: value\n            }));\n        }\n    };\n\n    useEffect(() => {\n        if (!inputs.location || !window.kakao || !window.kakao.maps) return;\n        const ps = new window.kakao.maps.services.Places();\n        ps.keywordSearch(inputs.location, (data: any[], status: any) => {\n            if (status === window.kakao.maps.services.Status.OK && data.length) {\n                setInputs(prev => ({\n                    ...prev,\n                    place: {\n                        lat: data[0].y,\n                        lng: data[0].x\n                    }\n                }));\n            }\n        });\n    }, [inputs.location]);\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n        try {\n            const response = await axios.post(`${baseUrl}/index/articles/create`, inputs);\n            if (response.status === 200) {\n                alert('Post successful!');\n                addPost(inputs);\n                navigate('/community');\n            } else {\n                alert('Post failed. Please try again.');\n            }\n        } catch (error: any) {\n            alert(`Error: ${error.response?.data || 'Error during post creation'}`);\n        }\n    };\n\n    return (\n        <div className={styles.pageContainer}>\n            <form onSubmit={handleSubmit} className={styles.formContainer}>\n                <label htmlFor=\"title\">제목</label>\n                <input type=\"text\" name=\"title\" value={inputs.title} onChange={onChange} />\n\n                <label htmlFor=\"date\">날짜</label>\n                <input type=\"date\" name=\"date\" value={inputs.date} onChange={onChange} />\n\n                <label htmlFor=\"time\">시간</label>\n                <input type=\"time\" name=\"time\" value={inputs.time} onChange={onChange} />\n\n                <label htmlFor=\"location\">장소</label>\n                <input type=\"text\" name=\"location\" value={inputs.location} onChange={onChange} />\n\n                <label htmlFor=\"participants\">인원 수</label>\n                <select name=\"participants\" value={inputs.participants} onChange={onChange}>\n                    <option value=\"\">인원 수 선택</option>\n                    {[...Array(10).keys()].map(n => <option key={n} value={n+1}>{n+1}명</option>)}\n                </select>\n\n                <label htmlFor=\"description\">자세한 설명</label>\n                <textarea name=\"description\" value={inputs.description} onChange={onChange} />\n\n                <button type=\"submit\" className={styles.submitButton}>작성완료</button>\n            </form>\n        </div>\n    );\n}\n\nexport default CreatePostPage;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}