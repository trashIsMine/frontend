{"ast":null,"code":"var _jsxFileName = \"/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/MapPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"../styles/mappage.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapPage({\n  selectedPlace\n}) {\n  _s();\n  // 지도의 중심좌표\n  const [center, setCenter] = useState({\n    lat: 0,\n    lng: 0\n  });\n  // 현재 위치\n  const [position, setPosition] = useState({\n    lat: 0,\n    lng: 0\n  });\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(pos => {\n      setCenter({\n        lat: pos.coords.latitude,\n        lng: pos.coords.longitude\n      });\n    });\n    navigator.geolocation.watchPosition(pos => {\n      setPosition({\n        lat: pos.coords.latitude,\n        lng: pos.coords.longitude\n      });\n    });\n    const container = document.getElementById('map');\n    const options = {\n      center: new window.kakao.maps.LatLng(33.450701, 126.570667),\n      level: 3\n    };\n    const map = new window.kakao.maps.Map(container, options);\n    if (selectedPlace) {\n      const markerPosition = new window.kakao.maps.LatLng(selectedPlace.lat, selectedPlace.lng);\n      const marker = new window.kakao.maps.Marker({\n        position: markerPosition\n      });\n\n      // 마커를 클릭했을 때 마커 위에 표시할 인포윈도우를 생성합니다\n      const iwContent = '<div style=\"padding:5px;\">Hello World!</div>',\n        // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n        iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n      // 인포윈도우를 생성합니다\n      const infowindow = new window.kakao.maps.InfoWindow({\n        content: iwContent,\n        removable: iwRemoveable\n      });\n      marker.setMap(map);\n      window.kakao.maps.event.addListener(marker, 'click', function () {\n        infowindow.open(map, marker);\n      });\n    }\n  }, [selectedPlace]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"map\",\n    className: styles.map\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n_s(MapPage, \"cwI2CXL0+kpYjM+F9ZG6G/teOTs=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","MapPage","selectedPlace","_s","center","setCenter","lat","lng","position","setPosition","navigator","geolocation","getCurrentPosition","pos","coords","latitude","longitude","watchPosition","container","document","getElementById","options","window","kakao","maps","LatLng","level","map","Map","markerPosition","marker","Marker","iwContent","iwRemoveable","infowindow","InfoWindow","content","removable","setMap","event","addListener","open","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/MapPage.tsx"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport styles from \"../styles/mappage.module.scss\";\n\ndeclare global {\n    interface Window {\n        kakao: any;\n    }\n}\n\ninterface MapPageProps {\n    selectedPlace: { lat: number, lng: number } | null;\n}\n\nfunction MapPage({ selectedPlace }: MapPageProps) {\n    // 지도의 중심좌표\n    const [center, setCenter] = useState<any>({\n        lat: 0,\n        lng: 0,\n    });\n    // 현재 위치\n    const [position, setPosition] = useState<any>({\n        lat: 0,\n        lng: 0,\n    });\n\n    useEffect(() => {\n        navigator.geolocation.getCurrentPosition((pos) => {\n            setCenter({ lat: pos.coords.latitude, lng: pos.coords.longitude });\n        });\n\n        navigator.geolocation.watchPosition((pos) => {\n            setPosition({ lat: pos.coords.latitude, lng: pos.coords.longitude });\n        });\n\n        const container = document.getElementById('map');\n        const options = {\n            center: new window.kakao.maps.LatLng(33.450701, 126.570667),\n            level: 3\n        };\n        const map = new window.kakao.maps.Map(container, options);\n\n        if (selectedPlace) {\n            const markerPosition = new window.kakao.maps.LatLng(selectedPlace.lat, selectedPlace.lng);\n            const marker = new window.kakao.maps.Marker({\n                position: markerPosition\n            });\n\n            // 마커를 클릭했을 때 마커 위에 표시할 인포윈도우를 생성합니다\n            const iwContent = '<div style=\"padding:5px;\">Hello World!</div>', // 인포윈도우에 표출될 내용으로 HTML 문자열이나 document element가 가능합니다\n                iwRemoveable = true; // removeable 속성을 ture 로 설정하면 인포윈도우를 닫을 수 있는 x버튼이 표시됩니다\n\n            // 인포윈도우를 생성합니다\n            const infowindow = new window.kakao.maps.InfoWindow({\n                content: iwContent,\n                removable: iwRemoveable\n            });\n\n            marker.setMap(map);\n\n            window.kakao.maps.event.addListener(marker, 'click', function () {\n                infowindow.open(map, marker);\n            });\n        }\n    }, [selectedPlace]);\n\n    return (\n        <div id=\"map\" className={styles.map}>\n        </div>\n    );\n}\n\nexport default MapPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAChD,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAYnD,SAASC,OAAOA,CAAC;EAAEC;AAA4B,CAAC,EAAE;EAAAC,EAAA;EAC9C;EACA,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAM;IACtCS,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE;EACT,CAAC,CAAC;EACF;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAM;IAC1CS,GAAG,EAAE,CAAC;IACNC,GAAG,EAAE;EACT,CAAC,CAAC;EAEFX,SAAS,CAAC,MAAM;IACZc,SAAS,CAACC,WAAW,CAACC,kBAAkB,CAAEC,GAAG,IAAK;MAC9CR,SAAS,CAAC;QAAEC,GAAG,EAAEO,GAAG,CAACC,MAAM,CAACC,QAAQ;QAAER,GAAG,EAAEM,GAAG,CAACC,MAAM,CAACE;MAAU,CAAC,CAAC;IACtE,CAAC,CAAC;IAEFN,SAAS,CAACC,WAAW,CAACM,aAAa,CAAEJ,GAAG,IAAK;MACzCJ,WAAW,CAAC;QAAEH,GAAG,EAAEO,GAAG,CAACC,MAAM,CAACC,QAAQ;QAAER,GAAG,EAAEM,GAAG,CAACC,MAAM,CAACE;MAAU,CAAC,CAAC;IACxE,CAAC,CAAC;IAEF,MAAME,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC;IAChD,MAAMC,OAAO,GAAG;MACZjB,MAAM,EAAE,IAAIkB,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC;MAC3DC,KAAK,EAAE;IACX,CAAC;IACD,MAAMC,GAAG,GAAG,IAAIL,MAAM,CAACC,KAAK,CAACC,IAAI,CAACI,GAAG,CAACV,SAAS,EAAEG,OAAO,CAAC;IAEzD,IAAInB,aAAa,EAAE;MACf,MAAM2B,cAAc,GAAG,IAAIP,MAAM,CAACC,KAAK,CAACC,IAAI,CAACC,MAAM,CAACvB,aAAa,CAACI,GAAG,EAAEJ,aAAa,CAACK,GAAG,CAAC;MACzF,MAAMuB,MAAM,GAAG,IAAIR,MAAM,CAACC,KAAK,CAACC,IAAI,CAACO,MAAM,CAAC;QACxCvB,QAAQ,EAAEqB;MACd,CAAC,CAAC;;MAEF;MACA,MAAMG,SAAS,GAAG,8CAA8C;QAAE;QAC9DC,YAAY,GAAG,IAAI,CAAC,CAAC;;MAEzB;MACA,MAAMC,UAAU,GAAG,IAAIZ,MAAM,CAACC,KAAK,CAACC,IAAI,CAACW,UAAU,CAAC;QAChDC,OAAO,EAAEJ,SAAS;QAClBK,SAAS,EAAEJ;MACf,CAAC,CAAC;MAEFH,MAAM,CAACQ,MAAM,CAACX,GAAG,CAAC;MAElBL,MAAM,CAACC,KAAK,CAACC,IAAI,CAACe,KAAK,CAACC,WAAW,CAACV,MAAM,EAAE,OAAO,EAAE,YAAY;QAC7DI,UAAU,CAACO,IAAI,CAACd,GAAG,EAAEG,MAAM,CAAC;MAChC,CAAC,CAAC;IACN;EACJ,CAAC,EAAE,CAAC5B,aAAa,CAAC,CAAC;EAEnB,oBACIF,OAAA;IAAK0C,EAAE,EAAC,KAAK;IAACC,SAAS,EAAE7C,MAAM,CAAC6B;EAAI;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEd;AAAC5C,EAAA,CAxDQF,OAAO;AAAA+C,EAAA,GAAP/C,OAAO;AA0DhB,eAAeA,OAAO;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}