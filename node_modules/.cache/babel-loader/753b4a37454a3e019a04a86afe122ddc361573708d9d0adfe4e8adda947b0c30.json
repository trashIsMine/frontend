{"ast":null,"code":"var _jsxFileName = \"/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/MapPage.tsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import styles from \"../styles/mappage.module.scss\";\n//\n// declare global {\n//     interface Window {\n//         kakao: any;\n//     }\n// }\n//\n// interface MapPageProps {\n//     selectedPlace: { lat: number, lng: number } | null;\n// }\n//\n// function MapPage({ selectedPlace }: MapPageProps) {\n//     const [center, setCenter] = useState<{ lat: number, lng: number }>({ lat: 33.450701, lng: 126.570667 });\n//     const [position, setPosition] = useState<{ lat: number, lng: number }>({ lat: 33.450701, lng: 126.570667 });\n//\n//     useEffect(() => {\n//         const initializeMap = (latitude: number, longitude: number) => {\n//             const infowindow = new window.kakao.maps.InfoWindow({zIndex:1});\n//             const container = document.getElementById('map');\n//             const options = {\n//                 center: new window.kakao.maps.LatLng(latitude, longitude),\n//                 level: 3\n//             };\n//             const map = new window.kakao.maps.Map(container, options);\n//\n//             // 현재 위치에 마커 표시\n//             const currentMarkerPosition = new window.kakao.maps.LatLng(latitude, longitude);\n//             const currentMarker = new window.kakao.maps.Marker({\n//                 position: currentMarkerPosition,\n//                 title: \"현재 위치\"\n//             });\n//             currentMarker.setMap(map);\n//\n//             if (selectedPlace) {\n//                 const markerPosition = new window.kakao.maps.LatLng(selectedPlace.lat, selectedPlace.lng);\n//                 const marker = new window.kakao.maps.Marker({\n//                     position: markerPosition\n//                 });\n//\n//                 const iwContent = '<div style=\"padding:5px;\">선택된 장소</div>',\n//                     iwRemoveable = true;\n//\n//                 const infowindow = new window.kakao.maps.InfoWindow({\n//                     content: iwContent,\n//                     removable: iwRemoveable\n//                 });\n//\n//                 marker.setMap(map);\n//\n//                 window.kakao.maps.event.addListener(marker, 'click', function () {\n//                     infowindow.open(map, marker);\n//                 });\n//             }\n//         };\n//\n//         navigator.geolocation.getCurrentPosition((pos) => {\n//             const latitude = pos.coords.latitude;\n//             const longitude = pos.coords.longitude;\n//             setCenter({ lat: latitude, lng: longitude });\n//             setPosition({ lat: latitude, lng: longitude });\n//             initializeMap(latitude, longitude);\n//         });\n//\n//         const watchId = navigator.geolocation.watchPosition((pos) => {\n//             const latitude = pos.coords.latitude;\n//             const longitude = pos.coords.longitude;\n//             setPosition({ lat: latitude, lng: longitude });\n//         });\n//\n//         return () => {\n//             navigator.geolocation.clearWatch(watchId);\n//         };\n//     }, [selectedPlace]);\n//\n//     useEffect(() => {\n//         if (position.lat !== 0 && position.lng !== 0) {\n//             const container = document.getElementById('map');\n//             const options = {\n//                 center: new window.kakao.maps.LatLng(position.lat, position.lng),\n//                 level: 3\n//             };\n//             const map = new window.kakao.maps.Map(container, options);\n//\n//             const currentMarkerPosition = new window.kakao.maps.LatLng(position.lat, position.lng);\n//             const currentMarker = new window.kakao.maps.Marker({\n//                 position: currentMarkerPosition,\n//                 title: \"현재 위치\"\n//             });\n//             currentMarker.setMap(map);\n//         }\n//     }, [position]);\n//\n//     return (\n//         <div id=\"map\" className={styles.map}>\n//         </div>\n//     );\n// }\n//\n// export default MapPage;\n\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"../styles/mappage.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MapPage({\n  selectedPlace\n}) {\n  _s();\n  const [center, setCenter] = useState({\n    lat: 33.450701,\n    lng: 126.570667\n  });\n  const [position, setPosition] = useState({\n    lat: 33.450701,\n    lng: 126.570667\n  });\n  const [keyword, setKeyword] = useState('');\n  const [places, setPlaces] = useState([]);\n  const [pagination, setPagination] = useState(null);\n  useEffect(() => {\n    const initializeMap = (latitude, longitude) => {\n      const container = document.getElementById('map');\n      const options = {\n        center: new window.kakao.maps.LatLng(latitude, longitude),\n        level: 3\n      };\n      const map = new window.kakao.maps.Map(container, options);\n      const currentMarkerPosition = new window.kakao.maps.LatLng(latitude, longitude);\n      const currentMarker = new window.kakao.maps.Marker({\n        position: currentMarkerPosition,\n        title: \"현재 위치\"\n      });\n      currentMarker.setMap(map);\n      if (selectedPlace) {\n        const markerPosition = new window.kakao.maps.LatLng(selectedPlace.lat, selectedPlace.lng);\n        const marker = new window.kakao.maps.Marker({\n          position: markerPosition\n        });\n        const iwContent = '<div style=\"padding:5px;\">선택된 장소</div>';\n        const infowindow = new window.kakao.maps.InfoWindow({\n          content: iwContent,\n          removable: true\n        });\n        marker.setMap(map);\n        window.kakao.maps.event.addListener(marker, 'click', function () {\n          infowindow.open(map, marker);\n        });\n      }\n\n      // 장소 검색 객체를 생성합니다\n      const ps = new window.kakao.maps.services.Places();\n\n      // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n      const infowindow = new window.kakao.maps.InfoWindow({\n        zIndex: 1\n      });\n\n      // 검색 결과 목록과 마커를 표출하는 함수입니다\n      const displayPlaces = places => {\n        const listEl = document.getElementById('placesList');\n        const bounds = new window.kakao.maps.LatLngBounds();\n\n        // 검색 결과 목록에 추가된 항목들을 제거합니다\n        removeAllChildNods(listEl);\n\n        // 지도에 표시되고 있는 마커를 제거합니다\n        removeMarker();\n        for (let i = 0; i < places.length; i++) {\n          // 마커를 생성하고 지도에 표시합니다\n          const placePosition = new window.kakao.maps.LatLng(places[i].y, places[i].x);\n          const marker = addMarker(placePosition, i);\n          const itemEl = getListItem(i, places[i]);\n          bounds.extend(placePosition);\n\n          // 마커와 검색결과 항목에 mouseover 했을때\n          // 해당 장소에 인포윈도우에 장소명을 표시합니다\n          // mouseout 했을 때는 인포윈도우를 닫습니다\n          (function (marker, title) {\n            window.kakao.maps.event.addListener(marker, 'mouseover', function () {\n              displayInfowindow(marker, title);\n            });\n            window.kakao.maps.event.addListener(marker, 'mouseout', function () {\n              infowindow.close();\n            });\n            itemEl.onmouseover = function () {\n              displayInfowindow(marker, title);\n            };\n            itemEl.onmouseout = function () {\n              infowindow.close();\n            };\n          })(marker, places[i].place_name);\n          listEl.appendChild(itemEl);\n        }\n\n        // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n        map.setBounds(bounds);\n      };\n\n      // 검색 결과 목록 하단에 페이지번호를 표시는 함수입니다\n      const displayPagination = pagination => {\n        const paginationEl = document.getElementById('pagination');\n        const fragment = document.createDocumentFragment();\n\n        // 기존에 추가된 페이지번호를 삭제합니다\n        while (paginationEl.hasChildNodes()) {\n          paginationEl.removeChild(paginationEl.lastChild);\n        }\n        for (let i = 1; i <= pagination.last; i++) {\n          const el = document.createElement('a');\n          el.href = \"#\";\n          el.innerHTML = i.toString();\n          if (i === pagination.current) {\n            el.className = 'on';\n          } else {\n            el.onclick = function (i) {\n              return function () {\n                pagination.gotoPage(i);\n              };\n            }(i);\n          }\n          fragment.appendChild(el);\n        }\n        paginationEl.appendChild(fragment);\n      };\n\n      // 키워드 검색을 요청하는 함수입니다\n      const searchPlaces = () => {\n        if (!keyword.replace(/^\\s+|\\s+$/g, '')) {\n          alert('키워드를 입력해주세요!');\n          return false;\n        }\n\n        // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\n        ps.keywordSearch(keyword, (data, status, pagination) => {\n          if (status === window.kakao.maps.services.Status.OK) {\n            displayPlaces(data);\n            setPagination(pagination);\n          } else if (status === window.kakao.maps.services.Status.ZERO_RESULT) {\n            alert('검색 결과가 존재하지 않습니다.');\n          } else if (status === window.kakao.maps.services.Status.ERROR) {\n            alert('검색 결과 중 오류가 발생했습니다.');\n          }\n        });\n      };\n\n      // 검색결과 항목을 Element로 반환하는 함수입니다\n      const getListItem = (index, places) => {\n        const el = document.createElement('li');\n        let itemStr = '<span class=\"markerbg marker_' + (index + 1) + '\"></span>' + '<div class=\"info\">' + '   <h5>' + places.place_name + '</h5>';\n        if (places.road_address_name) {\n          itemStr += '    <span>' + places.road_address_name + '</span>' + '   <span class=\"jibun gray\">' + places.address_name + '</span>';\n        } else {\n          itemStr += '    <span>' + places.address_name + '</span>';\n        }\n        itemStr += '  <span class=\"tel\">' + places.phone + '</span>' + '</div>';\n        el.innerHTML = itemStr;\n        el.className = 'item';\n        return el;\n      };\n\n      // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n      const addMarker = (position, idx) => {\n        const imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png';\n        const imageSize = new window.kakao.maps.Size(36, 37);\n        const imgOptions = {\n          spriteSize: new window.kakao.maps.Size(36, 691),\n          spriteOrigin: new window.kakao.maps.Point(0, idx * 46 + 10),\n          offset: new window.kakao.maps.Point(13, 37)\n        };\n        const markerImage = new window.kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions);\n        const marker = new window.kakao.maps.Marker({\n          position: position,\n          image: markerImage\n        });\n        marker.setMap(map);\n        markers.push(marker);\n        return marker;\n      };\n\n      // 지도 위에 표시되고 있는 마커를 모두 제거합니다\n      const removeMarker = () => {\n        for (let i = 0; i < markers.length; i++) {\n          markers[i].setMap(null);\n        }\n        markers = [];\n      };\n\n      // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\n      // 인포윈도우에 장소명을 표시합니다\n      const displayInfowindow = (marker, title) => {\n        const content = '<div style=\"padding:5px;z-index:1;\">' + title + '</div>';\n        infowindow.setContent(content);\n        infowindow.open(map, marker);\n      };\n\n      // 검색결과 목록의 자식 Element를 제거하는 함수입니다\n      const removeAllChildNods = el => {\n        while (el.hasChildNodes()) {\n          el.removeChild(el.lastChild);\n        }\n      };\n      const markers = [];\n      document.getElementById('searchButton').onclick = function () {\n        searchPlaces();\n      };\n    };\n    navigator.geolocation.getCurrentPosition(pos => {\n      const latitude = pos.coords.latitude;\n      const longitude = pos.coords.longitude;\n      setCenter({\n        lat: latitude,\n        lng: longitude\n      });\n      setPosition({\n        lat: latitude,\n        lng: longitude\n      });\n      initializeMap(latitude, longitude);\n    });\n    const watchId = navigator.geolocation.watchPosition(pos => {\n      const latitude = pos.coords.latitude;\n      const longitude = pos.coords.longitude;\n      setPosition({\n        lat: latitude,\n        lng: longitude\n      });\n    });\n    return () => {\n      navigator.geolocation.clearWatch(watchId);\n    };\n  }, [selectedPlace, keyword]);\n  useEffect(() => {\n    if (position.lat !== 0 && position.lng !== 0) {\n      const container = document.getElementById('map');\n      const options = {\n        center: new window.kakao.maps.LatLng(position.lat, position.lng),\n        level: 3\n      };\n      const map = new window.kakao.maps.Map(container, options);\n      const currentMarkerPosition = new window.kakao.maps.LatLng(position.lat, position.lng);\n      const currentMarker = new window.kakao.maps.Marker({\n        position: currentMarkerPosition,\n        title: \"현재 위치\"\n      });\n      currentMarker.setMap(map);\n    }\n  }, [position]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mapPage,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.searchContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"keyword\",\n        placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n        value: keyword,\n        onChange: e => setKeyword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"searchButton\",\n        children: \"\\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      className: styles.map\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"menu_wrap\",\n      className: styles.menuWrap,\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"placesList\",\n        className: styles.placesList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"pagination\",\n        className: styles.pagination\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 9\n  }, this);\n}\n_s(MapPage, \"lXs59zzAmKTVwH3Fd4nuqWAB7WU=\");\n_c = MapPage;\nexport default MapPage;\nvar _c;\n$RefreshReg$(_c, \"MapPage\");","map":{"version":3,"names":["React","useEffect","useState","styles","jsxDEV","_jsxDEV","MapPage","selectedPlace","_s","center","setCenter","lat","lng","position","setPosition","keyword","setKeyword","places","setPlaces","pagination","setPagination","initializeMap","latitude","longitude","container","document","getElementById","options","window","kakao","maps","LatLng","level","map","Map","currentMarkerPosition","currentMarker","Marker","title","setMap","markerPosition","marker","iwContent","infowindow","InfoWindow","content","removable","event","addListener","open","ps","services","Places","zIndex","displayPlaces","listEl","bounds","LatLngBounds","removeAllChildNods","removeMarker","i","length","placePosition","y","x","addMarker","itemEl","getListItem","extend","displayInfowindow","close","onmouseover","onmouseout","place_name","appendChild","setBounds","displayPagination","paginationEl","fragment","createDocumentFragment","hasChildNodes","removeChild","lastChild","last","el","createElement","href","innerHTML","toString","current","className","onclick","gotoPage","searchPlaces","replace","alert","keywordSearch","data","status","Status","OK","ZERO_RESULT","ERROR","index","itemStr","road_address_name","address_name","phone","idx","imageSrc","imageSize","Size","imgOptions","spriteSize","spriteOrigin","Point","offset","markerImage","MarkerImage","image","markers","push","setContent","navigator","geolocation","getCurrentPosition","pos","coords","watchId","watchPosition","clearWatch","mapPage","children","searchContainer","type","id","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","menuWrap","placesList","_c","$RefreshReg$"],"sources":["/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/MapPage.tsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\n// import styles from \"../styles/mappage.module.scss\";\n//\n// declare global {\n//     interface Window {\n//         kakao: any;\n//     }\n// }\n//\n// interface MapPageProps {\n//     selectedPlace: { lat: number, lng: number } | null;\n// }\n//\n// function MapPage({ selectedPlace }: MapPageProps) {\n//     const [center, setCenter] = useState<{ lat: number, lng: number }>({ lat: 33.450701, lng: 126.570667 });\n//     const [position, setPosition] = useState<{ lat: number, lng: number }>({ lat: 33.450701, lng: 126.570667 });\n//\n//     useEffect(() => {\n//         const initializeMap = (latitude: number, longitude: number) => {\n//             const infowindow = new window.kakao.maps.InfoWindow({zIndex:1});\n//             const container = document.getElementById('map');\n//             const options = {\n//                 center: new window.kakao.maps.LatLng(latitude, longitude),\n//                 level: 3\n//             };\n//             const map = new window.kakao.maps.Map(container, options);\n//\n//             // 현재 위치에 마커 표시\n//             const currentMarkerPosition = new window.kakao.maps.LatLng(latitude, longitude);\n//             const currentMarker = new window.kakao.maps.Marker({\n//                 position: currentMarkerPosition,\n//                 title: \"현재 위치\"\n//             });\n//             currentMarker.setMap(map);\n//\n//             if (selectedPlace) {\n//                 const markerPosition = new window.kakao.maps.LatLng(selectedPlace.lat, selectedPlace.lng);\n//                 const marker = new window.kakao.maps.Marker({\n//                     position: markerPosition\n//                 });\n//\n//                 const iwContent = '<div style=\"padding:5px;\">선택된 장소</div>',\n//                     iwRemoveable = true;\n//\n//                 const infowindow = new window.kakao.maps.InfoWindow({\n//                     content: iwContent,\n//                     removable: iwRemoveable\n//                 });\n//\n//                 marker.setMap(map);\n//\n//                 window.kakao.maps.event.addListener(marker, 'click', function () {\n//                     infowindow.open(map, marker);\n//                 });\n//             }\n//         };\n//\n//         navigator.geolocation.getCurrentPosition((pos) => {\n//             const latitude = pos.coords.latitude;\n//             const longitude = pos.coords.longitude;\n//             setCenter({ lat: latitude, lng: longitude });\n//             setPosition({ lat: latitude, lng: longitude });\n//             initializeMap(latitude, longitude);\n//         });\n//\n//         const watchId = navigator.geolocation.watchPosition((pos) => {\n//             const latitude = pos.coords.latitude;\n//             const longitude = pos.coords.longitude;\n//             setPosition({ lat: latitude, lng: longitude });\n//         });\n//\n//         return () => {\n//             navigator.geolocation.clearWatch(watchId);\n//         };\n//     }, [selectedPlace]);\n//\n//     useEffect(() => {\n//         if (position.lat !== 0 && position.lng !== 0) {\n//             const container = document.getElementById('map');\n//             const options = {\n//                 center: new window.kakao.maps.LatLng(position.lat, position.lng),\n//                 level: 3\n//             };\n//             const map = new window.kakao.maps.Map(container, options);\n//\n//             const currentMarkerPosition = new window.kakao.maps.LatLng(position.lat, position.lng);\n//             const currentMarker = new window.kakao.maps.Marker({\n//                 position: currentMarkerPosition,\n//                 title: \"현재 위치\"\n//             });\n//             currentMarker.setMap(map);\n//         }\n//     }, [position]);\n//\n//     return (\n//         <div id=\"map\" className={styles.map}>\n//         </div>\n//     );\n// }\n//\n// export default MapPage;\n\nimport React, { useEffect, useState } from \"react\";\nimport styles from \"../styles/mappage.module.scss\";\n\ndeclare global {\n    interface Window {\n        kakao: any;\n    }\n}\n\ninterface MapPageProps {\n    selectedPlace: { lat: number, lng: number } | null;\n}\n\nfunction MapPage({ selectedPlace }: MapPageProps) {\n    const [center, setCenter] = useState<{ lat: number, lng: number }>({ lat: 33.450701, lng: 126.570667 });\n    const [position, setPosition] = useState<{ lat: number, lng: number }>({ lat: 33.450701, lng: 126.570667 });\n    const [keyword, setKeyword] = useState<string>('');\n    const [places, setPlaces] = useState<any[]>([]);\n    const [pagination, setPagination] = useState<any>(null);\n\n    useEffect(() => {\n        const initializeMap = (latitude: number, longitude: number) => {\n            const container = document.getElementById('map');\n            const options = {\n                center: new window.kakao.maps.LatLng(latitude, longitude),\n                level: 3\n            };\n            const map = new window.kakao.maps.Map(container, options);\n\n            const currentMarkerPosition = new window.kakao.maps.LatLng(latitude, longitude);\n            const currentMarker = new window.kakao.maps.Marker({\n                position: currentMarkerPosition,\n                title: \"현재 위치\"\n            });\n            currentMarker.setMap(map);\n\n            if (selectedPlace) {\n                const markerPosition = new window.kakao.maps.LatLng(selectedPlace.lat, selectedPlace.lng);\n                const marker = new window.kakao.maps.Marker({\n                    position: markerPosition\n                });\n\n                const iwContent = '<div style=\"padding:5px;\">선택된 장소</div>';\n                const infowindow = new window.kakao.maps.InfoWindow({\n                    content: iwContent,\n                    removable: true\n                });\n\n                marker.setMap(map);\n\n                window.kakao.maps.event.addListener(marker, 'click', function () {\n                    infowindow.open(map, marker);\n                });\n            }\n\n            // 장소 검색 객체를 생성합니다\n            const ps = new window.kakao.maps.services.Places();\n\n            // 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\n            const infowindow = new window.kakao.maps.InfoWindow({ zIndex: 1 });\n\n            // 검색 결과 목록과 마커를 표출하는 함수입니다\n            const displayPlaces = (places: any[]) => {\n                const listEl = document.getElementById('placesList');\n                const bounds = new window.kakao.maps.LatLngBounds();\n\n                // 검색 결과 목록에 추가된 항목들을 제거합니다\n                removeAllChildNods(listEl);\n\n                // 지도에 표시되고 있는 마커를 제거합니다\n                removeMarker();\n\n                for (let i = 0; i < places.length; i++) {\n                    // 마커를 생성하고 지도에 표시합니다\n                    const placePosition = new window.kakao.maps.LatLng(places[i].y, places[i].x);\n                    const marker = addMarker(placePosition, i);\n                    const itemEl = getListItem(i, places[i]);\n\n                    bounds.extend(placePosition);\n\n                    // 마커와 검색결과 항목에 mouseover 했을때\n                    // 해당 장소에 인포윈도우에 장소명을 표시합니다\n                    // mouseout 했을 때는 인포윈도우를 닫습니다\n                    (function (marker, title) {\n                        window.kakao.maps.event.addListener(marker, 'mouseover', function () {\n                            displayInfowindow(marker, title);\n                        });\n\n                        window.kakao.maps.event.addListener(marker, 'mouseout', function () {\n                            infowindow.close();\n                        });\n\n                        itemEl.onmouseover = function () {\n                            displayInfowindow(marker, title);\n                        };\n\n                        itemEl.onmouseout = function () {\n                            infowindow.close();\n                        };\n                    })(marker, places[i].place_name);\n\n                    listEl.appendChild(itemEl);\n                }\n\n                // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\n                map.setBounds(bounds);\n            };\n\n            // 검색 결과 목록 하단에 페이지번호를 표시는 함수입니다\n            const displayPagination = (pagination: any) => {\n                const paginationEl = document.getElementById('pagination');\n                const fragment = document.createDocumentFragment();\n\n                // 기존에 추가된 페이지번호를 삭제합니다\n                while (paginationEl.hasChildNodes()) {\n                    paginationEl.removeChild(paginationEl.lastChild);\n                }\n\n                for (let i = 1; i <= pagination.last; i++) {\n                    const el = document.createElement('a');\n                    el.href = \"#\";\n                    el.innerHTML = i.toString();\n\n                    if (i === pagination.current) {\n                        el.className = 'on';\n                    } else {\n                        el.onclick = (function (i) {\n                            return function () {\n                                pagination.gotoPage(i);\n                            }\n                        })(i);\n                    }\n\n                    fragment.appendChild(el);\n                }\n                paginationEl.appendChild(fragment);\n            };\n\n            // 키워드 검색을 요청하는 함수입니다\n            const searchPlaces = () => {\n                if (!keyword.replace(/^\\s+|\\s+$/g, '')) {\n                    alert('키워드를 입력해주세요!');\n                    return false;\n                }\n\n                // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\n                ps.keywordSearch(keyword, (data: any[], status: any, pagination: any) => {\n                    if (status === window.kakao.maps.services.Status.OK) {\n                        displayPlaces(data);\n                        setPagination(pagination);\n                    } else if (status === window.kakao.maps.services.Status.ZERO_RESULT) {\n                        alert('검색 결과가 존재하지 않습니다.');\n                    } else if (status === window.kakao.maps.services.Status.ERROR) {\n                        alert('검색 결과 중 오류가 발생했습니다.');\n                    }\n                });\n            };\n\n            // 검색결과 항목을 Element로 반환하는 함수입니다\n            const getListItem = (index: number, places: any) => {\n                const el = document.createElement('li');\n                let itemStr = '<span class=\"markerbg marker_' + (index + 1) + '\"></span>' +\n                    '<div class=\"info\">' +\n                    '   <h5>' + places.place_name + '</h5>';\n\n                if (places.road_address_name) {\n                    itemStr += '    <span>' + places.road_address_name + '</span>' +\n                        '   <span class=\"jibun gray\">' + places.address_name + '</span>';\n                } else {\n                    itemStr += '    <span>' + places.address_name + '</span>';\n                }\n\n                itemStr += '  <span class=\"tel\">' + places.phone + '</span>' +\n                    '</div>';\n\n                el.innerHTML = itemStr;\n                el.className = 'item';\n\n                return el;\n            };\n\n            // 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\n            const addMarker = (position: any, idx: number) => {\n                const imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png';\n                const imageSize = new window.kakao.maps.Size(36, 37);\n                const imgOptions = {\n                    spriteSize: new window.kakao.maps.Size(36, 691),\n                    spriteOrigin: new window.kakao.maps.Point(0, (idx * 46) + 10),\n                    offset: new window.kakao.maps.Point(13, 37)\n                };\n                const markerImage = new window.kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions);\n                const marker = new window.kakao.maps.Marker({\n                    position: position,\n                    image: markerImage\n                });\n\n                marker.setMap(map);\n                markers.push(marker);\n\n                return marker;\n            };\n\n            // 지도 위에 표시되고 있는 마커를 모두 제거합니다\n            const removeMarker = () => {\n                for (let i = 0; i < markers.length; i++) {\n                    markers[i].setMap(null);\n                }\n                markers = [];\n            };\n\n            // 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\n            // 인포윈도우에 장소명을 표시합니다\n            const displayInfowindow = (marker: any, title: string) => {\n                const content = '<div style=\"padding:5px;z-index:1;\">' + title + '</div>';\n\n                infowindow.setContent(content);\n                infowindow.open(map, marker);\n            };\n\n            // 검색결과 목록의 자식 Element를 제거하는 함수입니다\n            const removeAllChildNods = (el: any) => {\n                while (el.hasChildNodes()) {\n                    el.removeChild(el.lastChild);\n                }\n            };\n\n            const markers: any[] = [];\n\n            (document.getElementById('searchButton') as HTMLButtonElement).onclick = function () {\n                searchPlaces();\n            };\n        };\n\n        navigator.geolocation.getCurrentPosition((pos) => {\n            const latitude = pos.coords.latitude;\n            const longitude = pos.coords.longitude;\n            setCenter({ lat: latitude, lng: longitude });\n            setPosition({ lat: latitude, lng: longitude });\n            initializeMap(latitude, longitude);\n        });\n\n        const watchId = navigator.geolocation.watchPosition((pos) => {\n            const latitude = pos.coords.latitude;\n            const longitude = pos.coords.longitude;\n            setPosition({ lat: latitude, lng: longitude });\n        });\n\n        return () => {\n            navigator.geolocation.clearWatch(watchId);\n        };\n    }, [selectedPlace, keyword]);\n\n    useEffect(() => {\n        if (position.lat !== 0 && position.lng !== 0) {\n            const container = document.getElementById('map');\n            const options = {\n                center: new window.kakao.maps.LatLng(position.lat, position.lng),\n                level: 3\n            };\n            const map = new window.kakao.maps.Map(container, options);\n\n            const currentMarkerPosition = new window.kakao.maps.LatLng(position.lat, position.lng);\n            const currentMarker = new window.kakao.maps.Marker({\n                position: currentMarkerPosition,\n                title: \"현재 위치\"\n            });\n            currentMarker.setMap(map);\n        }\n    }, [position]);\n\n    return (\n        <div className={styles.mapPage}>\n            <div className={styles.searchContainer}>\n                <input\n                    type=\"text\"\n                    id=\"keyword\"\n                    placeholder=\"검색어를 입력하세요\"\n                    value={keyword}\n                    onChange={(e) => setKeyword(e.target.value)}\n                />\n                <button id=\"searchButton\">검색</button>\n            </div>\n            <div id=\"map\" className={styles.map}></div>\n            <div id=\"menu_wrap\" className={styles.menuWrap}>\n                <ul id=\"placesList\" className={styles.placesList}></ul>\n                <div id=\"pagination\" className={styles.pagination}></div>\n            </div>\n        </div>\n    );\n}\n\nexport default MapPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}