{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import styles from '../styles/createpostpage.module.scss';\n// import { Post } from \"../interface/posts\";\n// import {useNavigate} from \"react-router-dom\";\n// import axios from \"axios\";\n//\n// declare global {\n//     interface Window {\n//         kakao: any;\n//     }\n// }\n//\n// interface CreatePostPageProps {\n//     setSelectedPlace: (place: { lat: number, lng: number } | null) => void;\n//     addPost: (post: Post) => void;\n//     login: boolean;\n//     setLogin: React.Dispatch<React.SetStateAction<boolean>>;\n// }\n//\n// function CreatePostPage({ setSelectedPlace, addPost, login, setLogin }: CreatePostPageProps) {\n//     if (login) {\n//         setLogin(true);\n//     }\n//     else {\n//         setLogin(false);\n//     }\n//\n//     const navigate = useNavigate();\n//     const baseUrl = 'http://3.37.252.66:8080';\n//     const [inputs, setInputs] = useState<Post>({\n//         id: 0,\n//         title: '',\n//         location: '',\n//         participants: '',\n//         date: '',\n//         time: '',\n//         views: 0,\n//         description: '',\n//         content: '',\n//         // imgSrc: '',\n//         imageFile:'',\n//\n//         lat: 0,\n//         lng: 0\n//     });\n//\n//     const onChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n//         const { value, name } = e.target;\n//\n//         // 숫자 필드에 대한 추가 처리\n//         if (name === 'id' || name === 'views') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseInt(value),\n//             });\n//         } else if (name === 'lat' || name === 'lng') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseFloat(value)\n//             });\n//         } else {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: value,\n//             });\n//         }\n//     };\n//\n//     const [places, setPlaces] = useState<any[]>([]);\n//     const [selectedPlace, setSelectedPlaceState] = useState<any>(null);\n//\n//     useEffect(() => {\n//         if (!inputs.location || !window.kakao || !window.kakao.maps) return;\n//\n//         const ps = new window.kakao.maps.services.Places();\n//         ps.keywordSearch(inputs.location, (data: any[], status: any) => {\n//             if (status === window.kakao.maps.services.Status.OK) {\n//                 setPlaces(data);\n//             }\n//         });\n//     }, [inputs.location]);\n//\n//     useEffect(() => {\n//         if (!selectedPlace || !window.kakao || !window.kakao.maps) return;\n//\n//         const container = document.getElementById('map');\n//         const options = {\n//             center: new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x),\n//             level: 3,\n//         };\n//         const map = new window.kakao.maps.Map(container, options);\n//         const markerPosition = new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x);\n//         const marker = new window.kakao.maps.Marker({\n//             position: markerPosition,\n//         });\n//         marker.setMap(map);\n//     }, [selectedPlace]);\n//\n//     const handleSelect = (place: any) => {\n//         setSelectedPlaceState(place);\n//         setSelectedPlace({ lat: place.y, lng: place.x });\n//         setInputs({\n//             ...inputs,\n//             location: place.address_name,\n//             lat: parseFloat(place.y),\n//             lng: parseFloat(place.x)\n//         });\n//         setPlaces([]);\n//     };\n//\n//     const handleSubmit = (e: React.FormEvent) => {\n//         e.preventDefault();\n//         // if (!selectedPlace) {\n//         //     alert('장소를 선택해주세요.');\n//         //     return;\n//         // }\n//         console.log(inputs)\n//         addPost(inputs);\n//\n//         axios.post(`${baseUrl}/index/articles/create`, inputs)\n//             .then((response) => {\n//                 if (response.status === 200) {\n//                     alert('Post successful!');\n//                     navigate('/community')\n//                     // setData(response.data);\n//                     // 여기서 원하는 동작을 추가할 수 있습니다. 예: 페이지 이동 등.\n//                 } else {\n//                     alert('Post failed. Please try again.');\n//                 }\n//             })\n//             .catch(error => {\n//                 if (error.response) {\n//                     alert(`Error: ${error.response.data}`);\n//                 } else {\n//                     alert('Error during Post');\n//                 }\n//             });\n//\n//\n//\n//         // axios.post(`http://3.37.252.66:8080/index/articles/create`, inputs)\n//         //     .then((response) => {\n//         //         if (response.status === 200) {\n//         //             alert('Post successful!');\n//         //             navigate('/community');\n//         //             // 필요한 다른 동작을 추가하세요.\n//         //         } else {\n//         //             alert('Post failed. Please try again.');\n//         //         }\n//         //     })\n//         //     .catch(error => {\n//         //         if (error.response) {\n//         //             // 서버가 응답을 주었으나 에러 코드가 있는 경우\n//         //             alert(`Error: ${error.response.status} - ${error.response.data}`);\n//         //         } else if (error.request) {\n//         //             // 요청이 이루어졌으나 응답을 받지 못한 경우\n//         //             alert(`No response received from server. ${error.response}`);\n//         //         } else {\n//         //             // 요청 설정 중에 오류가 발생한 경우\n//         //             alert(`Error: ${error.message}`);\n//         //         }\n//         //     });\n//\n//         // 폼 초기화\n//         setInputs({\n//             id: 0,\n//             title: '',\n//             location: '',\n//             participants: '',\n//             date: '',\n//             time: '',\n//             views: 0,\n//             description: '',\n//             content: '',\n//             // imgSrc: '',\n//             imageFile:'',\n//             lat: 0,\n//             lng: 0\n//         });\n//         setSelectedPlace(null);\n//     };\n//\n//     // // 이미지 파일을 저장하기 위한 상태\n//     // const [selectedFile, setSelectedFile] = useState<File | null>(null);\n//     // const [imagePreviewUrl, setImagePreviewUrl] = useState<string | null>(null);\n//     //\n//     // // 이미지 파일 변경 처리\n//     // // 이미지 파일 변경 처리\n//     // const onFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     //     if (e.target.files && e.target.files[0]) {\n//     //         const file = e.target.files[0];\n//     //         setSelectedFile(file);\n//     //\n//     //         // 이미지 미리보기 URL 생성\n//     //         const previewUrl = URL.createObjectURL(file);\n//     //         setImagePreviewUrl(previewUrl);\n//     //         setInputs({\n//     //             ...inputs,\n//     //             imgSrc: imagePreviewUrl;\n//     //         })\n//     //     }\n//     // };\n//\n//\n//     return (\n//         <div className={styles.pageContainer}>\n//             <div className={styles.formContainer}>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"title\">제목</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"title\"\n//                             name=\"title\"\n//                             placeholder=\"제목\"\n//                             value={inputs.title}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"imagedata\">이미지 파일</label>\n//                         <input type=\"file\"\n//                                // id=\"imgSrc\"\n//                                // name=\"imgSrc\"\n//                                id=\"imagedata\"\n//                                name=\"imagedata\"\n//                                placeholder=\"이미지 파일을 선택해주세요.\"\n//                                // value={inputs.imgSrc}\n//                                value={inputs.imageFile}\n//                                // onChange={onChange}\n//                                 onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"date\">날짜</label>\n//                         <input\n//                             type=\"date\"\n//                             id=\"date\"\n//                             name=\"date\"\n//                             placeholder=\"날짜\"\n//                             value={inputs.date}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"time\">시간</label>\n//                         <input\n//                             type=\"time\"\n//                             id=\"time\"\n//                             name=\"time\"\n//                             placeholder=\"시간\"\n//                             value={inputs.time}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"location\">장소</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"location\"\n//                             name=\"location\"\n//                             placeholder=\"주소로 검색하세요.\"\n//                             value={inputs.location}\n//                             onChange={onChange}\n//                         />\n//                         {places.length > 0 && (\n//                             <div className={styles.autocompleteDropdownContainer}>\n//                                 {places.map((place) => (\n//                                     <div\n//                                         key={place.id}\n//                                         className={styles.suggestionItem}\n//                                         onClick={() => handleSelect(place)}>\n//                                         {place.place_name} ({place.address_name})\n//                                     </div>\n//                                 ))}\n//                             </div>\n//                         )}\n//                     </div>\n//                     <div id=\"map\" className={styles.map}></div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"participants\">인원 수</label>\n//                         <select\n//                             id=\"participants\"\n//                             name=\"participants\"\n//                             className={styles.select}\n//                             value={inputs.participants}\n//                             onChange={onChange}\n//                         >\n//                             <option value=\"\" disabled>인원 수</option>\n//                             <option value=\"1\">1명</option>\n//                             <option value=\"2\">2명</option>\n//                             <option value=\"3\">3명</option>\n//                             <option value=\"4\">4명</option>\n//                             <option value=\"5\">5명</option>\n//                             <option value=\"6\">6명</option>\n//                             <option value=\"7\">7명</option>\n//                             <option value=\"8\">8명</option>\n//                             <option value=\"9\">9명</option>\n//                             <option value=\"10\">10명 이상</option>\n//                         </select>\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"description\">자세한 설명</label>\n//                         <textarea\n//                             id=\"description\"\n//                             name=\"description\"\n//                             placeholder=\"자세한 설명을 입력해주세요.\"\n//                             value={inputs.description}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.buttonGroup}>\n//                         <button type=\"submit\" className={styles.submitButton}>작성완료 ➔</button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default CreatePostPage;\n//\n//\n\n// import React, { useState, useEffect } from 'react';\n// import styles from '../styles/createpostpage.module.scss';\n// import { Post } from \"../interface/posts\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n//\n// declare global {\n//     interface Window {\n//         kakao: any;\n//     }\n// }\n//\n// interface CreatePostPageProps {\n//     setSelectedPlace: (place: { lat: number, lng: number } | null) => void;\n//     addPost: (post: Post) => void;\n//     login: boolean;\n//     setLogin: React.Dispatch<React.SetStateAction<boolean>>;\n// }\n//\n// function CreatePostPage({ setSelectedPlace, addPost, login, setLogin }: CreatePostPageProps) {\n//     if (login) {\n//         setLogin(true);\n//     } else {\n//         setLogin(false);\n//     }\n//\n//     const navigate = useNavigate();\n//     const baseUrl = 'http://3.37.252.66:8080';\n//     const [inputs, setInputs] = useState<Post>({\n//         id: 0,\n//         title: '',\n//         location: '',\n//         participants: '',\n//         date: '',\n//         time: '',\n//         views: 0,\n//         description: '',\n//         content: '',\n//         imageFile: '',\n//         lat: 0,\n//         lng: 0\n//     });\n//\n//     const [selectedFile, setSelectedFile] = useState<File | null>(null);\n//     const [places, setPlaces] = useState<any[]>([]);\n//     const [selectedPlace, setSelectedPlaceState] = useState<string>('');\n//\n//     const onChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n//         const { value, name } = e.target;\n//\n//         if (name === 'id' || name === 'views') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseInt(value),\n//             });\n//         } else if (name === 'lat' || name === 'lng') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseFloat(value)\n//             });\n//         } else if (name === 'imageFile') {\n//             onFileChange(value)\n//             setInputs({\n//                 ...inputs,\n//                 [name]: selectedFile,\n//             });\n//         } else {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: value,\n//             });\n//         }\n//     };\n//\n//     const onFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//         if (e.target.files && e.target.files[0]) {\n//             setSelectedFile(e.target.files[0]);\n//         }\n//     };\n//\n//     useEffect(() => {\n//         if (!inputs.location || !window.kakao || !window.kakao.maps) return;\n//\n//         const ps = new window.kakao.maps.services.Places();\n//         ps.keywordSearch(inputs.location, (data: any[], status: any) => {\n//             if (status === window.kakao.maps.services.Status.OK) {\n//                 setPlaces(data);\n//             }\n//         });\n//     }, [inputs.location]);\n//\n//     useEffect(() => {\n//         if (!selectedPlace || !window.kakao || !window.kakao.maps) return;\n//\n//         const container = document.getElementById('map');\n//         const options = {\n//             center: new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x),\n//             level: 3,\n//         };\n//         const map = new window.kakao.maps.Map(container, options);\n//         const markerPosition = new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x);\n//         const marker = new window.kakao.maps.Marker({\n//             position: markerPosition,\n//         });\n//         marker.setMap(map);\n//     }, [selectedPlace]);\n//\n//     const handleSelect = (place: any) => {\n//         setSelectedPlaceState(place);\n//         setSelectedPlace({ lat: place.y, lng: place.x });\n//         setInputs({\n//             ...inputs,\n//             location: place.address_name,\n//             lat: parseFloat(place.y),\n//             lng: parseFloat(place.x)\n//         });\n//         setPlaces([]);\n//     };\n//\n//     const handleSubmit = async (e: React.FormEvent) => {\n//         e.preventDefault();\n//\n//         if (!selectedPlace) {\n//             alert('장소를 선택해주세요.');\n//             return;\n//         }\n//\n//         const formData = new FormData();\n//         formData.append('title', inputs.title);\n//         formData.append('location', inputs.location);\n//         formData.append('participants', inputs.participants);\n//         formData.append('date', inputs.date);\n//         formData.append('time', inputs.time);\n//         formData.append('views', inputs.views.toString());\n//         formData.append('description', inputs.description);\n//         formData.append('content', inputs.content);\n//         formData.append('lat', inputs.lat.toString());\n//         formData.append('lng', inputs.lng.toString());\n//\n//         if (selectedFile) {\n//             formData.append('imageFile', selectedFile);\n//         }\n//\n//         console.log(formData);\n//         console.log(inputs);\n//\n//         try {\n//             const response = await axios.post(`${baseUrl}/index/articles/create`, formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             if (response.status === 200) {\n//                 alert('Post successful!');\n//                 navigate('/community');\n//             } else {\n//                 alert('Post failed. Please try again.');\n//             }\n//         } catch (error) {\n//             if (axios.isAxiosError(error)) {\n//                 if (error.response) {\n//                     alert(`Error: ${error.response.data}`);\n//                 } else {\n//                     alert('Error during Post');\n//                 }\n//             }\n//         }\n//\n//         setInputs({\n//             id: 0,\n//             title: '',\n//             location: '',\n//             participants: '',\n//             date: '',\n//             time: '',\n//             views: 0,\n//             description: '',\n//             content: '',\n//             imageFile: '',\n//             lat: 0,\n//             lng: 0\n//         });\n//         setSelectedPlace(null);\n//         setSelectedFile(null);\n//     };\n//\n//     return (\n//         <div className={styles.pageContainer}>\n//             <div className={styles.formContainer}>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"title\">제목</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"title\"\n//                             name=\"title\"\n//                             placeholder=\"제목\"\n//                             value={inputs.title}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"imagedata\">이미지 파일</label>\n//                         <input\n//                             type=\"file\"\n//                             id=\"imagedata\"\n//                             name=\"imagedata\"\n//                             placeholder=\"이미지 파일을 선택해주세요.\"\n//                             onChange={onFileChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"date\">날짜</label>\n//                         <input\n//                             type=\"date\"\n//                             id=\"date\"\n//                             name=\"date\"\n//                             placeholder=\"날짜\"\n//                             value={inputs.date}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"time\">시간</label>\n//                         <input\n//                             type=\"time\"\n//                             id=\"time\"\n//                             name=\"time\"\n//                             placeholder=\"시간\"\n//                             value={inputs.time}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"location\">장소</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"location\"\n//                             name=\"location\"\n//                             placeholder=\"주소로 검색하세요.\"\n//                             value={inputs.location}\n//                             onChange={onChange}\n//                         />\n//                         {places.length > 0 && (\n//                             <div className={styles.autocompleteDropdownContainer}>\n//                                 {places.map((place) => (\n//                                     <div\n//                                         key={place.id}\n//                                         className={styles.suggestionItem}\n//                                         onClick={() => handleSelect(place)}>\n//                                         {place.place_name} ({place.address_name})\n//                                     </div>\n//                                 ))}\n//                             </div>\n//                         )}\n//                     </div>\n//                     <div id=\"map\" className={styles.map}></div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"participants\">인원 수</label>\n//                         <select\n//                             id=\"participants\"\n//                             name=\"participants\"\n//                             className={styles.select}\n//                             value={inputs.participants}\n//                             onChange={onChange}\n//                         >\n//                             <option value=\"\" disabled>인원 수</option>\n//                             <option value=\"1\">1명</option>\n//                             <option value=\"2\">2명</option>\n//                             <option value=\"3\">3명</option>\n//                             <option value=\"4\">4명</option>\n//                             <option value=\"5\">5명</option>\n//                             <option value=\"6\">6명</option>\n//                             <option value=\"7\">7명</option>\n//                             <option value=\"8\">8명</option>\n//                             <option value=\"9\">9명</option>\n//                             <option value=\"10\">10명 이상</option>\n//                         </select>\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"description\">자세한 설명</label>\n//                         <textarea\n//                             id=\"description\"\n//                             name=\"description\"\n//                             placeholder=\"자세한 설명을 입력해주세요.\"\n//                             value={inputs.description}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.buttonGroup}>\n//                         <button type=\"submit\" className={styles.submitButton}>작성완료 ➔</button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default CreatePostPage;","map":{"version":3,"names":[],"sources":["/Users/parksaseong/Desktop/saseong/github/frontend/src/pages/CreatePostPage.tsx"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\n// import styles from '../styles/createpostpage.module.scss';\n// import { Post } from \"../interface/posts\";\n// import {useNavigate} from \"react-router-dom\";\n// import axios from \"axios\";\n//\n// declare global {\n//     interface Window {\n//         kakao: any;\n//     }\n// }\n//\n// interface CreatePostPageProps {\n//     setSelectedPlace: (place: { lat: number, lng: number } | null) => void;\n//     addPost: (post: Post) => void;\n//     login: boolean;\n//     setLogin: React.Dispatch<React.SetStateAction<boolean>>;\n// }\n//\n// function CreatePostPage({ setSelectedPlace, addPost, login, setLogin }: CreatePostPageProps) {\n//     if (login) {\n//         setLogin(true);\n//     }\n//     else {\n//         setLogin(false);\n//     }\n//\n//     const navigate = useNavigate();\n//     const baseUrl = 'http://3.37.252.66:8080';\n//     const [inputs, setInputs] = useState<Post>({\n//         id: 0,\n//         title: '',\n//         location: '',\n//         participants: '',\n//         date: '',\n//         time: '',\n//         views: 0,\n//         description: '',\n//         content: '',\n//         // imgSrc: '',\n//         imageFile:'',\n//\n//         lat: 0,\n//         lng: 0\n//     });\n//\n//     const onChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n//         const { value, name } = e.target;\n//\n//         // 숫자 필드에 대한 추가 처리\n//         if (name === 'id' || name === 'views') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseInt(value),\n//             });\n//         } else if (name === 'lat' || name === 'lng') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseFloat(value)\n//             });\n//         } else {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: value,\n//             });\n//         }\n//     };\n//\n//     const [places, setPlaces] = useState<any[]>([]);\n//     const [selectedPlace, setSelectedPlaceState] = useState<any>(null);\n//\n//     useEffect(() => {\n//         if (!inputs.location || !window.kakao || !window.kakao.maps) return;\n//\n//         const ps = new window.kakao.maps.services.Places();\n//         ps.keywordSearch(inputs.location, (data: any[], status: any) => {\n//             if (status === window.kakao.maps.services.Status.OK) {\n//                 setPlaces(data);\n//             }\n//         });\n//     }, [inputs.location]);\n//\n//     useEffect(() => {\n//         if (!selectedPlace || !window.kakao || !window.kakao.maps) return;\n//\n//         const container = document.getElementById('map');\n//         const options = {\n//             center: new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x),\n//             level: 3,\n//         };\n//         const map = new window.kakao.maps.Map(container, options);\n//         const markerPosition = new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x);\n//         const marker = new window.kakao.maps.Marker({\n//             position: markerPosition,\n//         });\n//         marker.setMap(map);\n//     }, [selectedPlace]);\n//\n//     const handleSelect = (place: any) => {\n//         setSelectedPlaceState(place);\n//         setSelectedPlace({ lat: place.y, lng: place.x });\n//         setInputs({\n//             ...inputs,\n//             location: place.address_name,\n//             lat: parseFloat(place.y),\n//             lng: parseFloat(place.x)\n//         });\n//         setPlaces([]);\n//     };\n//\n//     const handleSubmit = (e: React.FormEvent) => {\n//         e.preventDefault();\n//         // if (!selectedPlace) {\n//         //     alert('장소를 선택해주세요.');\n//         //     return;\n//         // }\n//         console.log(inputs)\n//         addPost(inputs);\n//\n//         axios.post(`${baseUrl}/index/articles/create`, inputs)\n//             .then((response) => {\n//                 if (response.status === 200) {\n//                     alert('Post successful!');\n//                     navigate('/community')\n//                     // setData(response.data);\n//                     // 여기서 원하는 동작을 추가할 수 있습니다. 예: 페이지 이동 등.\n//                 } else {\n//                     alert('Post failed. Please try again.');\n//                 }\n//             })\n//             .catch(error => {\n//                 if (error.response) {\n//                     alert(`Error: ${error.response.data}`);\n//                 } else {\n//                     alert('Error during Post');\n//                 }\n//             });\n//\n//\n//\n//         // axios.post(`http://3.37.252.66:8080/index/articles/create`, inputs)\n//         //     .then((response) => {\n//         //         if (response.status === 200) {\n//         //             alert('Post successful!');\n//         //             navigate('/community');\n//         //             // 필요한 다른 동작을 추가하세요.\n//         //         } else {\n//         //             alert('Post failed. Please try again.');\n//         //         }\n//         //     })\n//         //     .catch(error => {\n//         //         if (error.response) {\n//         //             // 서버가 응답을 주었으나 에러 코드가 있는 경우\n//         //             alert(`Error: ${error.response.status} - ${error.response.data}`);\n//         //         } else if (error.request) {\n//         //             // 요청이 이루어졌으나 응답을 받지 못한 경우\n//         //             alert(`No response received from server. ${error.response}`);\n//         //         } else {\n//         //             // 요청 설정 중에 오류가 발생한 경우\n//         //             alert(`Error: ${error.message}`);\n//         //         }\n//         //     });\n//\n//         // 폼 초기화\n//         setInputs({\n//             id: 0,\n//             title: '',\n//             location: '',\n//             participants: '',\n//             date: '',\n//             time: '',\n//             views: 0,\n//             description: '',\n//             content: '',\n//             // imgSrc: '',\n//             imageFile:'',\n//             lat: 0,\n//             lng: 0\n//         });\n//         setSelectedPlace(null);\n//     };\n//\n//     // // 이미지 파일을 저장하기 위한 상태\n//     // const [selectedFile, setSelectedFile] = useState<File | null>(null);\n//     // const [imagePreviewUrl, setImagePreviewUrl] = useState<string | null>(null);\n//     //\n//     // // 이미지 파일 변경 처리\n//     // // 이미지 파일 변경 처리\n//     // const onFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     //     if (e.target.files && e.target.files[0]) {\n//     //         const file = e.target.files[0];\n//     //         setSelectedFile(file);\n//     //\n//     //         // 이미지 미리보기 URL 생성\n//     //         const previewUrl = URL.createObjectURL(file);\n//     //         setImagePreviewUrl(previewUrl);\n//     //         setInputs({\n//     //             ...inputs,\n//     //             imgSrc: imagePreviewUrl;\n//     //         })\n//     //     }\n//     // };\n//\n//\n//     return (\n//         <div className={styles.pageContainer}>\n//             <div className={styles.formContainer}>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"title\">제목</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"title\"\n//                             name=\"title\"\n//                             placeholder=\"제목\"\n//                             value={inputs.title}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"imagedata\">이미지 파일</label>\n//                         <input type=\"file\"\n//                                // id=\"imgSrc\"\n//                                // name=\"imgSrc\"\n//                                id=\"imagedata\"\n//                                name=\"imagedata\"\n//                                placeholder=\"이미지 파일을 선택해주세요.\"\n//                                // value={inputs.imgSrc}\n//                                value={inputs.imageFile}\n//                                // onChange={onChange}\n//                                 onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"date\">날짜</label>\n//                         <input\n//                             type=\"date\"\n//                             id=\"date\"\n//                             name=\"date\"\n//                             placeholder=\"날짜\"\n//                             value={inputs.date}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"time\">시간</label>\n//                         <input\n//                             type=\"time\"\n//                             id=\"time\"\n//                             name=\"time\"\n//                             placeholder=\"시간\"\n//                             value={inputs.time}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"location\">장소</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"location\"\n//                             name=\"location\"\n//                             placeholder=\"주소로 검색하세요.\"\n//                             value={inputs.location}\n//                             onChange={onChange}\n//                         />\n//                         {places.length > 0 && (\n//                             <div className={styles.autocompleteDropdownContainer}>\n//                                 {places.map((place) => (\n//                                     <div\n//                                         key={place.id}\n//                                         className={styles.suggestionItem}\n//                                         onClick={() => handleSelect(place)}>\n//                                         {place.place_name} ({place.address_name})\n//                                     </div>\n//                                 ))}\n//                             </div>\n//                         )}\n//                     </div>\n//                     <div id=\"map\" className={styles.map}></div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"participants\">인원 수</label>\n//                         <select\n//                             id=\"participants\"\n//                             name=\"participants\"\n//                             className={styles.select}\n//                             value={inputs.participants}\n//                             onChange={onChange}\n//                         >\n//                             <option value=\"\" disabled>인원 수</option>\n//                             <option value=\"1\">1명</option>\n//                             <option value=\"2\">2명</option>\n//                             <option value=\"3\">3명</option>\n//                             <option value=\"4\">4명</option>\n//                             <option value=\"5\">5명</option>\n//                             <option value=\"6\">6명</option>\n//                             <option value=\"7\">7명</option>\n//                             <option value=\"8\">8명</option>\n//                             <option value=\"9\">9명</option>\n//                             <option value=\"10\">10명 이상</option>\n//                         </select>\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"description\">자세한 설명</label>\n//                         <textarea\n//                             id=\"description\"\n//                             name=\"description\"\n//                             placeholder=\"자세한 설명을 입력해주세요.\"\n//                             value={inputs.description}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.buttonGroup}>\n//                         <button type=\"submit\" className={styles.submitButton}>작성완료 ➔</button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default CreatePostPage;\n//\n//\n\n\n\n\n// import React, { useState, useEffect } from 'react';\n// import styles from '../styles/createpostpage.module.scss';\n// import { Post } from \"../interface/posts\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n//\n// declare global {\n//     interface Window {\n//         kakao: any;\n//     }\n// }\n//\n// interface CreatePostPageProps {\n//     setSelectedPlace: (place: { lat: number, lng: number } | null) => void;\n//     addPost: (post: Post) => void;\n//     login: boolean;\n//     setLogin: React.Dispatch<React.SetStateAction<boolean>>;\n// }\n//\n// function CreatePostPage({ setSelectedPlace, addPost, login, setLogin }: CreatePostPageProps) {\n//     if (login) {\n//         setLogin(true);\n//     } else {\n//         setLogin(false);\n//     }\n//\n//     const navigate = useNavigate();\n//     const baseUrl = 'http://3.37.252.66:8080';\n//     const [inputs, setInputs] = useState<Post>({\n//         id: 0,\n//         title: '',\n//         location: '',\n//         participants: '',\n//         date: '',\n//         time: '',\n//         views: 0,\n//         description: '',\n//         content: '',\n//         imageFile: '',\n//         lat: 0,\n//         lng: 0\n//     });\n//\n//     const [selectedFile, setSelectedFile] = useState<File | null>(null);\n//     const [places, setPlaces] = useState<any[]>([]);\n//     const [selectedPlace, setSelectedPlaceState] = useState<string>('');\n//\n//     const onChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement>) => {\n//         const { value, name } = e.target;\n//\n//         if (name === 'id' || name === 'views') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseInt(value),\n//             });\n//         } else if (name === 'lat' || name === 'lng') {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: parseFloat(value)\n//             });\n//         } else if (name === 'imageFile') {\n//             onFileChange(value)\n//             setInputs({\n//                 ...inputs,\n//                 [name]: selectedFile,\n//             });\n//         } else {\n//             setInputs({\n//                 ...inputs,\n//                 [name]: value,\n//             });\n//         }\n//     };\n//\n//     const onFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//         if (e.target.files && e.target.files[0]) {\n//             setSelectedFile(e.target.files[0]);\n//         }\n//     };\n//\n//     useEffect(() => {\n//         if (!inputs.location || !window.kakao || !window.kakao.maps) return;\n//\n//         const ps = new window.kakao.maps.services.Places();\n//         ps.keywordSearch(inputs.location, (data: any[], status: any) => {\n//             if (status === window.kakao.maps.services.Status.OK) {\n//                 setPlaces(data);\n//             }\n//         });\n//     }, [inputs.location]);\n//\n//     useEffect(() => {\n//         if (!selectedPlace || !window.kakao || !window.kakao.maps) return;\n//\n//         const container = document.getElementById('map');\n//         const options = {\n//             center: new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x),\n//             level: 3,\n//         };\n//         const map = new window.kakao.maps.Map(container, options);\n//         const markerPosition = new window.kakao.maps.LatLng(selectedPlace.y, selectedPlace.x);\n//         const marker = new window.kakao.maps.Marker({\n//             position: markerPosition,\n//         });\n//         marker.setMap(map);\n//     }, [selectedPlace]);\n//\n//     const handleSelect = (place: any) => {\n//         setSelectedPlaceState(place);\n//         setSelectedPlace({ lat: place.y, lng: place.x });\n//         setInputs({\n//             ...inputs,\n//             location: place.address_name,\n//             lat: parseFloat(place.y),\n//             lng: parseFloat(place.x)\n//         });\n//         setPlaces([]);\n//     };\n//\n//     const handleSubmit = async (e: React.FormEvent) => {\n//         e.preventDefault();\n//\n//         if (!selectedPlace) {\n//             alert('장소를 선택해주세요.');\n//             return;\n//         }\n//\n//         const formData = new FormData();\n//         formData.append('title', inputs.title);\n//         formData.append('location', inputs.location);\n//         formData.append('participants', inputs.participants);\n//         formData.append('date', inputs.date);\n//         formData.append('time', inputs.time);\n//         formData.append('views', inputs.views.toString());\n//         formData.append('description', inputs.description);\n//         formData.append('content', inputs.content);\n//         formData.append('lat', inputs.lat.toString());\n//         formData.append('lng', inputs.lng.toString());\n//\n//         if (selectedFile) {\n//             formData.append('imageFile', selectedFile);\n//         }\n//\n//         console.log(formData);\n//         console.log(inputs);\n//\n//         try {\n//             const response = await axios.post(`${baseUrl}/index/articles/create`, formData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                 },\n//             });\n//\n//             if (response.status === 200) {\n//                 alert('Post successful!');\n//                 navigate('/community');\n//             } else {\n//                 alert('Post failed. Please try again.');\n//             }\n//         } catch (error) {\n//             if (axios.isAxiosError(error)) {\n//                 if (error.response) {\n//                     alert(`Error: ${error.response.data}`);\n//                 } else {\n//                     alert('Error during Post');\n//                 }\n//             }\n//         }\n//\n//         setInputs({\n//             id: 0,\n//             title: '',\n//             location: '',\n//             participants: '',\n//             date: '',\n//             time: '',\n//             views: 0,\n//             description: '',\n//             content: '',\n//             imageFile: '',\n//             lat: 0,\n//             lng: 0\n//         });\n//         setSelectedPlace(null);\n//         setSelectedFile(null);\n//     };\n//\n//     return (\n//         <div className={styles.pageContainer}>\n//             <div className={styles.formContainer}>\n//                 <form onSubmit={handleSubmit}>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"title\">제목</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"title\"\n//                             name=\"title\"\n//                             placeholder=\"제목\"\n//                             value={inputs.title}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"imagedata\">이미지 파일</label>\n//                         <input\n//                             type=\"file\"\n//                             id=\"imagedata\"\n//                             name=\"imagedata\"\n//                             placeholder=\"이미지 파일을 선택해주세요.\"\n//                             onChange={onFileChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"date\">날짜</label>\n//                         <input\n//                             type=\"date\"\n//                             id=\"date\"\n//                             name=\"date\"\n//                             placeholder=\"날짜\"\n//                             value={inputs.date}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"time\">시간</label>\n//                         <input\n//                             type=\"time\"\n//                             id=\"time\"\n//                             name=\"time\"\n//                             placeholder=\"시간\"\n//                             value={inputs.time}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"location\">장소</label>\n//                         <input\n//                             type=\"text\"\n//                             id=\"location\"\n//                             name=\"location\"\n//                             placeholder=\"주소로 검색하세요.\"\n//                             value={inputs.location}\n//                             onChange={onChange}\n//                         />\n//                         {places.length > 0 && (\n//                             <div className={styles.autocompleteDropdownContainer}>\n//                                 {places.map((place) => (\n//                                     <div\n//                                         key={place.id}\n//                                         className={styles.suggestionItem}\n//                                         onClick={() => handleSelect(place)}>\n//                                         {place.place_name} ({place.address_name})\n//                                     </div>\n//                                 ))}\n//                             </div>\n//                         )}\n//                     </div>\n//                     <div id=\"map\" className={styles.map}></div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"participants\">인원 수</label>\n//                         <select\n//                             id=\"participants\"\n//                             name=\"participants\"\n//                             className={styles.select}\n//                             value={inputs.participants}\n//                             onChange={onChange}\n//                         >\n//                             <option value=\"\" disabled>인원 수</option>\n//                             <option value=\"1\">1명</option>\n//                             <option value=\"2\">2명</option>\n//                             <option value=\"3\">3명</option>\n//                             <option value=\"4\">4명</option>\n//                             <option value=\"5\">5명</option>\n//                             <option value=\"6\">6명</option>\n//                             <option value=\"7\">7명</option>\n//                             <option value=\"8\">8명</option>\n//                             <option value=\"9\">9명</option>\n//                             <option value=\"10\">10명 이상</option>\n//                         </select>\n//                     </div>\n//                     <div className={styles.formGroup}>\n//                         <label htmlFor=\"description\">자세한 설명</label>\n//                         <textarea\n//                             id=\"description\"\n//                             name=\"description\"\n//                             placeholder=\"자세한 설명을 입력해주세요.\"\n//                             value={inputs.description}\n//                             onChange={onChange}\n//                         />\n//                     </div>\n//                     <div className={styles.buttonGroup}>\n//                         <button type=\"submit\" className={styles.submitButton}>작성완료 ➔</button>\n//                     </div>\n//                 </form>\n//             </div>\n//         </div>\n//     );\n// }\n//\n// export default CreatePostPage;\n\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}